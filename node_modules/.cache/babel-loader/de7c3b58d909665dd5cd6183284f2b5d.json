{"ast":null,"code":"var _jsxFileName = \"/Users/willmacbook/Desktop/hikr-react-store-locator-test/src/App.js\";\nimport React, { Component } from 'react';\nimport Map from './Map';\nimport './App.css'; // import Stores from './stores'\n\nclass App extends Component {\n  componentDidMount() {\n    // fetch(Stores)\n    // .then(res => res.json())\n    // .then(res => console.log(res.features))\n    // // .then(store => this.setState({ pokemonCollection: pokemonCollection }))\n    // .catch(e => console.error(e))\n    var stores = {\n      type: 'FeatureCollection',\n      features: [{\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.034084142948, 38.909671288923]\n        },\n        properties: {\n          phoneFormatted: '(202) 234-7336',\n          phone: '2022347336',\n          address: '1471 P St NW',\n          city: 'Washington DC',\n          country: 'United States',\n          crossStreet: 'at 15th St NW',\n          postalCode: '20005',\n          state: 'D.C.'\n        }\n      }, {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.049766, 38.900772]\n        },\n        properties: {\n          phoneFormatted: '(202) 507-8357',\n          phone: '2025078357',\n          address: '2221 I St NW',\n          city: 'Washington DC',\n          country: 'United States',\n          crossStreet: 'at 22nd St NW',\n          postalCode: '20037',\n          state: 'D.C.'\n        }\n      }, {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.043929, 38.910525]\n        },\n        properties: {\n          phoneFormatted: '(202) 387-9338',\n          phone: '2023879338',\n          address: '1512 Connecticut Ave NW',\n          city: 'Washington DC',\n          country: 'United States',\n          crossStreet: 'at Dupont Circle',\n          postalCode: '20036',\n          state: 'D.C.'\n        }\n      }, {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.0672, 38.90516896]\n        },\n        properties: {\n          phoneFormatted: '(202) 337-9338',\n          phone: '2023379338',\n          address: '3333 M St NW',\n          city: 'Washington DC',\n          country: 'United States',\n          crossStreet: 'at 34th St NW',\n          postalCode: '20007',\n          state: 'D.C.'\n        }\n      }, {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.002583742142, 38.887041080933]\n        },\n        properties: {\n          phoneFormatted: '(202) 547-9338',\n          phone: '2025479338',\n          address: '221 Pennsylvania Ave SE',\n          city: 'Washington DC',\n          country: 'United States',\n          crossStreet: 'btwn 2nd & 3rd Sts. SE',\n          postalCode: '20003',\n          state: 'D.C.'\n        }\n      }, {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-76.933492720127, 38.99225245786]\n        },\n        properties: {\n          address: '8204 Baltimore Ave',\n          city: 'College Park',\n          country: 'United States',\n          postalCode: '20740',\n          state: 'MD'\n        }\n      }, {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.097083330154, 38.980979]\n        },\n        properties: {\n          phoneFormatted: '(301) 654-7336',\n          phone: '3016547336',\n          address: '4831 Bethesda Ave',\n          cc: 'US',\n          city: 'Bethesda',\n          country: 'United States',\n          postalCode: '20814',\n          state: 'MD'\n        }\n      }, {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.359425054188, 38.958058116661]\n        },\n        properties: {\n          phoneFormatted: '(571) 203-0082',\n          phone: '5712030082',\n          address: '11935 Democracy Dr',\n          city: 'Reston',\n          country: 'United States',\n          crossStreet: 'btw Explorer & Library',\n          postalCode: '20190',\n          state: 'VA'\n        }\n      }, {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.10853099823, 38.880100922392]\n        },\n        properties: {\n          phoneFormatted: '(703) 522-2016',\n          phone: '7035222016',\n          address: '4075 Wilson Blvd',\n          city: 'Arlington',\n          country: 'United States',\n          crossStreet: 'at N Randolph St.',\n          postalCode: '22203',\n          state: 'VA'\n        }\n      }, {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-75.28784, 40.008008]\n        },\n        properties: {\n          phoneFormatted: '(610) 642-9400',\n          phone: '6106429400',\n          address: '68 Coulter Ave',\n          city: 'Ardmore',\n          country: 'United States',\n          postalCode: '19003',\n          state: 'PA'\n        }\n      }, {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-75.20121216774, 39.954030175164]\n        },\n        properties: {\n          phoneFormatted: '(215) 386-1365',\n          phone: '2153861365',\n          address: '3925 Walnut St',\n          city: 'Philadelphia',\n          country: 'United States',\n          postalCode: '19104',\n          state: 'PA'\n        }\n      }, {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.043959498405, 38.903883387232]\n        },\n        properties: {\n          phoneFormatted: '(202) 331-3355',\n          phone: '2023313355',\n          address: '1901 L St. NW',\n          city: 'Washington DC',\n          country: 'United States',\n          crossStreet: 'at 19th St',\n          postalCode: '20036',\n          state: 'D.C.'\n        }\n      }]\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(Map, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/willmacbook/Desktop/hikr-react-store-locator-test/src/App.js"],"names":["React","Component","Map","App","componentDidMount","stores","type","features","geometry","coordinates","properties","phoneFormatted","phone","address","city","country","crossStreet","postalCode","state","cc","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Map from './Map'\nimport './App.css'\n// import Stores from './stores'\n\nclass App extends Component {\n\n  \n  \n  componentDidMount() {\n    // fetch(Stores)\n    // .then(res => res.json())\n    // .then(res => console.log(res.features))\n    // // .then(store => this.setState({ pokemonCollection: pokemonCollection }))\n    // .catch(e => console.error(e))\n    var stores = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.034084142948, 38.909671288923]\n        },\n        properties: {\n          phoneFormatted: '(202) 234-7336',\n          phone: '2022347336',\n          address: '1471 P St NW',\n          city: 'Washington DC',\n          country: 'United States',\n          crossStreet: 'at 15th St NW',\n          postalCode: '20005',\n          state: 'D.C.'\n        }\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.049766, 38.900772]\n        },\n        properties: {\n          phoneFormatted: '(202) 507-8357',\n          phone: '2025078357',\n          address: '2221 I St NW',\n          city: 'Washington DC',\n          country: 'United States',\n          crossStreet: 'at 22nd St NW',\n          postalCode: '20037',\n          state: 'D.C.'\n        }\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.043929, 38.910525]\n        },\n        properties: {\n          phoneFormatted: '(202) 387-9338',\n          phone: '2023879338',\n          address: '1512 Connecticut Ave NW',\n          city: 'Washington DC',\n          country: 'United States',\n          crossStreet: 'at Dupont Circle',\n          postalCode: '20036',\n          state: 'D.C.'\n        }\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.0672, 38.90516896]\n        },\n        properties: {\n          phoneFormatted: '(202) 337-9338',\n          phone: '2023379338',\n          address: '3333 M St NW',\n          city: 'Washington DC',\n          country: 'United States',\n          crossStreet: 'at 34th St NW',\n          postalCode: '20007',\n          state: 'D.C.'\n        }\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.002583742142, 38.887041080933]\n        },\n        properties: {\n          phoneFormatted: '(202) 547-9338',\n          phone: '2025479338',\n          address: '221 Pennsylvania Ave SE',\n          city: 'Washington DC',\n          country: 'United States',\n          crossStreet: 'btwn 2nd & 3rd Sts. SE',\n          postalCode: '20003',\n          state: 'D.C.'\n        }\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-76.933492720127, 38.99225245786]\n        },\n        properties: {\n          address: '8204 Baltimore Ave',\n          city: 'College Park',\n          country: 'United States',\n          postalCode: '20740',\n          state: 'MD'\n        }\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.097083330154, 38.980979]\n        },\n        properties: {\n          phoneFormatted: '(301) 654-7336',\n          phone: '3016547336',\n          address: '4831 Bethesda Ave',\n          cc: 'US',\n          city: 'Bethesda',\n          country: 'United States',\n          postalCode: '20814',\n          state: 'MD'\n        }\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.359425054188, 38.958058116661]\n        },\n        properties: {\n          phoneFormatted: '(571) 203-0082',\n          phone: '5712030082',\n          address: '11935 Democracy Dr',\n          city: 'Reston',\n          country: 'United States',\n          crossStreet: 'btw Explorer & Library',\n          postalCode: '20190',\n          state: 'VA'\n        }\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.10853099823, 38.880100922392]\n        },\n        properties: {\n          phoneFormatted: '(703) 522-2016',\n          phone: '7035222016',\n          address: '4075 Wilson Blvd',\n          city: 'Arlington',\n          country: 'United States',\n          crossStreet: 'at N Randolph St.',\n          postalCode: '22203',\n          state: 'VA'\n        }\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-75.28784, 40.008008]\n        },\n        properties: {\n          phoneFormatted: '(610) 642-9400',\n          phone: '6106429400',\n          address: '68 Coulter Ave',\n          city: 'Ardmore',\n          country: 'United States',\n          postalCode: '19003',\n          state: 'PA'\n        }\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-75.20121216774, 39.954030175164]\n        },\n        properties: {\n          phoneFormatted: '(215) 386-1365',\n          phone: '2153861365',\n          address: '3925 Walnut St',\n          city: 'Philadelphia',\n          country: 'United States',\n          postalCode: '19104',\n          state: 'PA'\n        }\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: [-77.043959498405, 38.903883387232]\n        },\n        properties: {\n          phoneFormatted: '(202) 331-3355',\n          phone: '2023313355',\n          address: '1901 L St. NW',\n          city: 'Washington DC',\n          country: 'United States',\n          crossStreet: 'at 19th St',\n          postalCode: '20036',\n          state: 'D.C.'\n        }\n      }\n    ]\n  }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Map />\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}