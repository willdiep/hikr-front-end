{"ast":null,"code":"// MUST CONVERT FILE TO GEOJSON LATER\nvar stores = {\n  type: 'FeatureCollection',\n  features: [{\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-77.034084142948, 38.909671288923]\n    },\n    properties: {\n      phoneFormatted: '(202) 234-7336',\n      phone: '2022347336',\n      address: '1471 P St NW',\n      city: 'Washington DC',\n      country: 'United States',\n      crossStreet: 'at 15th St NW',\n      postalCode: '20005',\n      state: 'D.C.'\n    }\n  }, {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-77.049766, 38.900772]\n    },\n    properties: {\n      phoneFormatted: '(202) 507-8357',\n      phone: '2025078357',\n      address: '2221 I St NW',\n      city: 'Washington DC',\n      country: 'United States',\n      crossStreet: 'at 22nd St NW',\n      postalCode: '20037',\n      state: 'D.C.'\n    }\n  }, {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-77.043929, 38.910525]\n    },\n    properties: {\n      phoneFormatted: '(202) 387-9338',\n      phone: '2023879338',\n      address: '1512 Connecticut Ave NW',\n      city: 'Washington DC',\n      country: 'United States',\n      crossStreet: 'at Dupont Circle',\n      postalCode: '20036',\n      state: 'D.C.'\n    }\n  }, {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-77.0672, 38.90516896]\n    },\n    properties: {\n      phoneFormatted: '(202) 337-9338',\n      phone: '2023379338',\n      address: '3333 M St NW',\n      city: 'Washington DC',\n      country: 'United States',\n      crossStreet: 'at 34th St NW',\n      postalCode: '20007',\n      state: 'D.C.'\n    }\n  }, {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-77.002583742142, 38.887041080933]\n    },\n    properties: {\n      phoneFormatted: '(202) 547-9338',\n      phone: '2025479338',\n      address: '221 Pennsylvania Ave SE',\n      city: 'Washington DC',\n      country: 'United States',\n      crossStreet: 'btwn 2nd & 3rd Sts. SE',\n      postalCode: '20003',\n      state: 'D.C.'\n    }\n  }, {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-76.933492720127, 38.99225245786]\n    },\n    properties: {\n      address: '8204 Baltimore Ave',\n      city: 'College Park',\n      country: 'United States',\n      postalCode: '20740',\n      state: 'MD'\n    }\n  }, {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-77.097083330154, 38.980979]\n    },\n    properties: {\n      phoneFormatted: '(301) 654-7336',\n      phone: '3016547336',\n      address: '4831 Bethesda Ave',\n      cc: 'US',\n      city: 'Bethesda',\n      country: 'United States',\n      postalCode: '20814',\n      state: 'MD'\n    }\n  }, {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-77.359425054188, 38.958058116661]\n    },\n    properties: {\n      phoneFormatted: '(571) 203-0082',\n      phone: '5712030082',\n      address: '11935 Democracy Dr',\n      city: 'Reston',\n      country: 'United States',\n      crossStreet: 'btw Explorer & Library',\n      postalCode: '20190',\n      state: 'VA'\n    }\n  }, {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-77.10853099823, 38.880100922392]\n    },\n    properties: {\n      phoneFormatted: '(703) 522-2016',\n      phone: '7035222016',\n      address: '4075 Wilson Blvd',\n      city: 'Arlington',\n      country: 'United States',\n      crossStreet: 'at N Randolph St.',\n      postalCode: '22203',\n      state: 'VA'\n    }\n  }, {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-75.28784, 40.008008]\n    },\n    properties: {\n      phoneFormatted: '(610) 642-9400',\n      phone: '6106429400',\n      address: '68 Coulter Ave',\n      city: 'Ardmore',\n      country: 'United States',\n      postalCode: '19003',\n      state: 'PA'\n    }\n  }, {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-75.20121216774, 39.954030175164]\n    },\n    properties: {\n      phoneFormatted: '(215) 386-1365',\n      phone: '2153861365',\n      address: '3925 Walnut St',\n      city: 'Philadelphia',\n      country: 'United States',\n      postalCode: '19104',\n      state: 'PA'\n    }\n  }, {\n    type: 'Feature',\n    geometry: {\n      type: 'Point',\n      coordinates: [-77.043959498405, 38.903883387232]\n    },\n    properties: {\n      phoneFormatted: '(202) 331-3355',\n      phone: '2023313355',\n      address: '1901 L St. NW',\n      city: 'Washington DC',\n      country: 'United States',\n      crossStreet: 'at 19th St',\n      postalCode: '20036',\n      state: 'D.C.'\n    }\n  }]\n};\n/**\n * Assign a unique id to each store. You'll use this `id`\n * later to associate each point on the map with a listing\n * in the sidebar.\n */\n// stores.features.forEach(function(store, i) {\n//   store.properties.id = i\n// })\n// export default Stores","map":{"version":3,"sources":["/Users/willmacbook/Desktop/hikr-react-store-locator-test/src/Stores.js"],"names":["stores","type","features","geometry","coordinates","properties","phoneFormatted","phone","address","city","country","crossStreet","postalCode","state","cc"],"mappings":"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","sourcesContent":["// MUST CONVERT FILE TO GEOJSON LATER\n\nvar stores = {\n  type: 'FeatureCollection',\n  features: [\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.034084142948, 38.909671288923]\n      },\n      properties: {\n        phoneFormatted: '(202) 234-7336',\n        phone: '2022347336',\n        address: '1471 P St NW',\n        city: 'Washington DC',\n        country: 'United States',\n        crossStreet: 'at 15th St NW',\n        postalCode: '20005',\n        state: 'D.C.'\n      }\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.049766, 38.900772]\n      },\n      properties: {\n        phoneFormatted: '(202) 507-8357',\n        phone: '2025078357',\n        address: '2221 I St NW',\n        city: 'Washington DC',\n        country: 'United States',\n        crossStreet: 'at 22nd St NW',\n        postalCode: '20037',\n        state: 'D.C.'\n      }\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.043929, 38.910525]\n      },\n      properties: {\n        phoneFormatted: '(202) 387-9338',\n        phone: '2023879338',\n        address: '1512 Connecticut Ave NW',\n        city: 'Washington DC',\n        country: 'United States',\n        crossStreet: 'at Dupont Circle',\n        postalCode: '20036',\n        state: 'D.C.'\n      }\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.0672, 38.90516896]\n      },\n      properties: {\n        phoneFormatted: '(202) 337-9338',\n        phone: '2023379338',\n        address: '3333 M St NW',\n        city: 'Washington DC',\n        country: 'United States',\n        crossStreet: 'at 34th St NW',\n        postalCode: '20007',\n        state: 'D.C.'\n      }\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.002583742142, 38.887041080933]\n      },\n      properties: {\n        phoneFormatted: '(202) 547-9338',\n        phone: '2025479338',\n        address: '221 Pennsylvania Ave SE',\n        city: 'Washington DC',\n        country: 'United States',\n        crossStreet: 'btwn 2nd & 3rd Sts. SE',\n        postalCode: '20003',\n        state: 'D.C.'\n      }\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-76.933492720127, 38.99225245786]\n      },\n      properties: {\n        address: '8204 Baltimore Ave',\n        city: 'College Park',\n        country: 'United States',\n        postalCode: '20740',\n        state: 'MD'\n      }\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.097083330154, 38.980979]\n      },\n      properties: {\n        phoneFormatted: '(301) 654-7336',\n        phone: '3016547336',\n        address: '4831 Bethesda Ave',\n        cc: 'US',\n        city: 'Bethesda',\n        country: 'United States',\n        postalCode: '20814',\n        state: 'MD'\n      }\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.359425054188, 38.958058116661]\n      },\n      properties: {\n        phoneFormatted: '(571) 203-0082',\n        phone: '5712030082',\n        address: '11935 Democracy Dr',\n        city: 'Reston',\n        country: 'United States',\n        crossStreet: 'btw Explorer & Library',\n        postalCode: '20190',\n        state: 'VA'\n      }\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.10853099823, 38.880100922392]\n      },\n      properties: {\n        phoneFormatted: '(703) 522-2016',\n        phone: '7035222016',\n        address: '4075 Wilson Blvd',\n        city: 'Arlington',\n        country: 'United States',\n        crossStreet: 'at N Randolph St.',\n        postalCode: '22203',\n        state: 'VA'\n      }\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-75.28784, 40.008008]\n      },\n      properties: {\n        phoneFormatted: '(610) 642-9400',\n        phone: '6106429400',\n        address: '68 Coulter Ave',\n        city: 'Ardmore',\n        country: 'United States',\n        postalCode: '19003',\n        state: 'PA'\n      }\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-75.20121216774, 39.954030175164]\n      },\n      properties: {\n        phoneFormatted: '(215) 386-1365',\n        phone: '2153861365',\n        address: '3925 Walnut St',\n        city: 'Philadelphia',\n        country: 'United States',\n        postalCode: '19104',\n        state: 'PA'\n      }\n    },\n    {\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: [-77.043959498405, 38.903883387232]\n      },\n      properties: {\n        phoneFormatted: '(202) 331-3355',\n        phone: '2023313355',\n        address: '1901 L St. NW',\n        city: 'Washington DC',\n        country: 'United States',\n        crossStreet: 'at 19th St',\n        postalCode: '20036',\n        state: 'D.C.'\n      }\n    }\n  ]\n}\n\n/**\n * Assign a unique id to each store. You'll use this `id`\n * later to associate each point on the map with a listing\n * in the sidebar.\n */\n// stores.features.forEach(function(store, i) {\n//   store.properties.id = i\n// })\n\n// export default Stores"]},"metadata":{},"sourceType":"module"}