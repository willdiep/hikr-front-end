{"version":3,"file":"index.es.js","sources":["../../../node_modules/json-stringify-pretty-compact/index.js","../format.js","../../../node_modules/url/node_modules/punycode/punycode.js","../../../node_modules/url/util.js","../../../node_modules/querystring/decode.js","../../../node_modules/querystring/encode.js","../../../node_modules/querystring/index.js","../../../node_modules/url/url.js","../visit.js","../migrate/v8.js","../util/extend.js","../expression/parsing_error.js","../expression/scope.js","../expression/types.js","../node_modules/csscolorparser/csscolorparser.js","../util/color.js","../expression/types/collator.js","../expression/types/formatted.js","../expression/types/resolved_image.js","../expression/values.js","../expression/definitions/literal.js","../expression/runtime_error.js","../expression/definitions/assertion.js","../expression/definitions/format.js","../expression/definitions/image.js","../expression/definitions/coercion.js","../expression/evaluation_context.js","../expression/compound_expression.js","../expression/definitions/collator.js","../expression/is_constant.js","../expression/definitions/var.js","../expression/parsing_context.js","../expression/stops.js","../expression/definitions/step.js","../../../node_modules/@mapbox/unitbezier/index.js","../util/interpolate.js","../util/color_spaces.js","../expression/definitions/interpolate.js","../expression/definitions/coalesce.js","../expression/definitions/let.js","../expression/definitions/at.js","../expression/definitions/in.js","../expression/definitions/match.js","../expression/definitions/case.js","../expression/definitions/comparison.js","../expression/definitions/number_format.js","../expression/definitions/length.js","../expression/definitions/index.js","../util/result.js","../util/properties.js","../util/get_type.js","../function/index.js","../expression/index.js","../function/convert.js","../feature_filter/index.js","../feature_filter/convert.js","../migrate/expressions.js","../migrate.js","../composite.js","../util/deep_equal.js","../diff.js","../error/validation_error.js","../error/parsing_error.js","../validate/validate_constants.js","../util/unbundle_jsonlint.js","../validate/validate_object.js","../validate/validate_array.js","../validate/validate_number.js","../validate/validate_function.js","../validate/validate_expression.js","../validate/validate_boolean.js","../validate/validate_color.js","../validate/validate_enum.js","../validate/validate_filter.js","../validate/validate_property.js","../validate/validate_paint_property.js","../validate/validate_layout_property.js","../validate/validate_layer.js","../validate/validate_source.js","../validate/validate_light.js","../validate/validate_string.js","../validate/validate_formatted.js","../validate/validate_image.js","../validate/validate.js","../validate/validate_glyphs_url.js","../validate_style.min.js","../../../node_modules/@mapbox/jsonlint-lines-primitives/lib/jsonlint.js","../read_style.js","../validate_style.js","../validate_mapbox_api_supported.js","../style-spec.js"],"sourcesContent":["\"use strict\";\n\n// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nvar stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nmodule.exports = function stringify(passedObj, options) {\n  var indent, maxLength, replacer;\n\n  options = options || {};\n  indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n  maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n  replacer = options.replacer;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    // prettier-ignore\n    var end, index, items, key, keyPart, keys, length, nextIndent, prettified, start, string, value;\n\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      prettified = string.replace(stringOrChar, function(match, stringLiteral) {\n        return stringLiteral || match + \" \";\n      });\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      nextIndent = currentIndent + indent;\n      items = [];\n      index = 0;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        length = obj.length;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        keys = Object.keys(obj);\n        length = keys.length;\n        for (; index < length; index++) {\n          key = keys[index];\n          keyPart = JSON.stringify(key) + \": \";\n          value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(\",\\n\" + nextIndent), end].join(\n          \"\\n\" + currentIndent\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n};\n","\nimport reference from './reference/latest.js';\nimport stringifyPretty from 'json-stringify-pretty-compact';\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n\n/**\n * Format a Mapbox GL Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a Mapbox GL Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('mapbox-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, reference.$root);\n\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, reference.layer));\n    }\n\n    return stringifyPretty(style, {indent: space});\n}\n\nexport default format;\n","/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n","'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","// @flow\n\nimport Reference from './reference/v8.json';\nimport type {StylePropertySpecification} from './style-spec';\nimport type {\n    StyleSpecification,\n    SourceSpecification,\n    LayerSpecification,\n    PropertyValueSpecification,\n    DataDrivenPropertyValueSpecification\n} from './types';\n\nfunction getPropertyReference(propertyName): StylePropertySpecification {\n    for (let i = 0; i < Reference.layout.length; i++) {\n        for (const key in Reference[Reference.layout[i]]) {\n            if (key === propertyName) return (Reference[Reference.layout[i]][key]: any);\n        }\n    }\n    for (let i = 0; i < Reference.paint.length; i++) {\n        for (const key in Reference[Reference.paint[i]]) {\n            if (key === propertyName) return (Reference[Reference.paint[i]][key]: any);\n        }\n    }\n\n    return (null: any);\n}\n\nexport function eachSource(style: StyleSpecification, callback: (SourceSpecification) => void) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\n\nexport function eachLayer(style: StyleSpecification, callback: (LayerSpecification) => void) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\n\ntype PropertyCallback = ({\n    path: [string, 'paint' | 'layout', string], // [layerid, paint/layout, property key]\n    key: string,\n    value: PropertyValueSpecification<mixed> | DataDrivenPropertyValueSpecification<mixed>,\n    reference: StylePropertySpecification,\n    set: (PropertyValueSpecification<mixed> | DataDrivenPropertyValueSpecification<mixed>) => void\n}) => void;\n\nexport function eachProperty(\n    style: StyleSpecification,\n    options: {paint?: boolean, layout?: boolean},\n    callback: PropertyCallback\n) {\n    function inner(layer, propertyType: 'paint' | 'layout') {\n        const properties = (layer[propertyType]: any);\n        if (!properties) return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n","\nimport URL from 'url';\nimport {eachSource, eachLayer, eachProperty} from '../visit';\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    } else {\n        return value;\n    }\n}\n\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\n\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from]; delete obj[from];\n}\n\nexport default function(style) {\n    style.version = 8;\n\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source.url !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n\n    // Inline Constants\n    eachProperty(style, {paint: true, layout: true}, (property) => {\n        const value = resolveConstant(style, property.value);\n\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n\n        property.set(value);\n    });\n    delete style.constants;\n\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout) layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n\n            if (paint['icon-size']) {\n                if (!layer.layout) layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n\n    function migrateFontstackURL(input) {\n        const inputParsed = URL.parse(input);\n        const inputPathnameParts = inputParsed.pathname.split('/');\n\n        if (inputParsed.protocol !== 'mapbox:') {\n            return input;\n\n        } else if (inputParsed.hostname === 'fontstack') {\n            assert(decodeURI(inputParsed.pathname) === '/{fontstack}/{range}.pbf');\n            return 'mapbox://fonts/mapbox/{fontstack}/{range}.pbf';\n\n        } else if (inputParsed.hostname === 'fonts') {\n            assert(inputPathnameParts[1] === 'v1');\n            assert(decodeURI(inputPathnameParts[3]) === '{fontstack}');\n            assert(decodeURI(inputPathnameParts[4]) === '{range}.pbf');\n            return `mapbox://fonts/${inputPathnameParts[2]}/{fontstack}/{range}.pbf`;\n\n        } else {\n            assert(false);\n        }\n\n        function assert(predicate) {\n            if (!predicate) {\n                throw new Error(`Invalid font url: \"${input}\"`);\n            }\n        }\n    }\n\n    if (style.glyphs) {\n        style.glyphs = migrateFontstackURL(style.glyphs);\n    }\n\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n\n        } else if (typeof font === 'string') {\n            return splitAndTrim(font);\n\n        } else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n\n        } else {\n            throw new Error(\"unexpected font value\");\n        }\n    }\n\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n\n    return style;\n}\n","// @flow\n\nexport default function (output: any, ...inputs: Array<any>) {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n","// @flow\n\nclass ParsingError extends Error {\n    key: string;\n    message: string;\n    constructor(key: string, message: string) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n","// @flow\n\nimport type {Expression} from './expression';\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    parent: ?Scope;\n    bindings: {[string]: Expression};\n    constructor(parent?: Scope, bindings: Array<[string, Expression]> = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings: Array<[string, Expression]>) {\n        return new Scope(this, bindings);\n    }\n\n    get(name: string): Expression {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name: string): boolean {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n","// @flow\n\nexport type NullTypeT = { kind: 'null' };\nexport type NumberTypeT = { kind: 'number' };\nexport type StringTypeT = { kind: 'string' };\nexport type BooleanTypeT = { kind: 'boolean' };\nexport type ColorTypeT = { kind: 'color' };\nexport type ObjectTypeT = { kind: 'object' };\nexport type ValueTypeT = { kind: 'value' };\nexport type ErrorTypeT = { kind: 'error' };\nexport type CollatorTypeT = { kind: 'collator' };\nexport type FormattedTypeT = { kind: 'formatted' };\nexport type ResolvedImageTypeT = { kind: 'resolvedImage' };\n\nexport type EvaluationKind = 'constant' | 'source' | 'camera' | 'composite';\n\nexport type Type =\n    NullTypeT |\n    NumberTypeT |\n    StringTypeT |\n    BooleanTypeT |\n    ColorTypeT |\n    ObjectTypeT |\n    ValueTypeT |\n    ArrayType | // eslint-disable-line no-use-before-define\n    ErrorTypeT |\n    CollatorTypeT |\n    FormattedTypeT |\n    ResolvedImageTypeT\n\nexport type ArrayType = {\n    kind: 'array',\n    itemType: Type,\n    N: ?number\n}\n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType: Type, N: ?number): ArrayType {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type: Type): string {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected: Type, t: Type): ?string {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n","// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n","// @flow\n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n\n    constructor(r: number, g: number, b: number, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    static black: Color;\n    static white: Color;\n    static transparent: Color;\n    static red: Color;\n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input?: string | Color | null): Color | void {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString(): string {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    toArray(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\n\nexport default Color;\n","// @flow\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\ndeclare var Intl: {\n    Collator: Class<Intl$Collator>\n};\n\ndeclare class Intl$Collator {\n    constructor (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    static (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    compare (a: string, b: string): number;\n\n    resolvedOptions(): any;\n}\n\ntype CollatorOptions = {\n    localeMatcher?: 'lookup' | 'best fit',\n    usage?: 'sort' | 'search',\n    sensitivity?: 'base' | 'accent' | 'case' | 'variant',\n    ignorePunctuation?: boolean,\n    numeric?: boolean,\n    caseFirst?: 'upper' | 'lower' | 'false'\n}\n\nexport default class Collator {\n    locale: string | null;\n    sensitivity: 'base' | 'accent' | 'case' | 'variant';\n    collator: Intl$Collator;\n\n    constructor(caseSensitive: boolean, diacriticSensitive: boolean, locale: string | null) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs: string, rhs: string): number {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale(): string {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n","// @flow\nimport type Color from '../../util/color';\nimport type ResolvedImage from '../types/resolved_image';\n\nexport class FormattedSection {\n    text: string;\n    image: ResolvedImage | null;\n    scale: number | null;\n    fontStack: string | null;\n    textColor: Color | null;\n\n    constructor(text: string, image: ResolvedImage | null, scale: number | null, fontStack: string | null, textColor: Color | null) {\n        this.text = text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n    sections: Array<FormattedSection>;\n\n    constructor(sections: Array<FormattedSection>) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted: string): Formatted {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty(): boolean {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text: Formatted | string): Formatted {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString(): string {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize(): Array<mixed> {\n        const serialized: Array<mixed> = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options: { [key: string]: mixed } = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]: Array<mixed>).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","// @flow\n\nexport type ResolvedImageOptions = {\n    name: string,\n    available: boolean\n};\n\nexport default class ResolvedImage {\n    name: string;\n    available: boolean;\n\n    constructor(options: ResolvedImageOptions) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString(): string {\n        return this.name;\n    }\n\n    static fromString(name: string): ResolvedImage {\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize(): Array<string> {\n        return [\"image\", this.name];\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport Color from '../util/color';\nimport Collator from './types/collator';\nimport Formatted from './types/formatted';\nimport ResolvedImage from './types/resolved_image';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types';\n\nimport type {Type} from './types';\n\nexport function validateRGBA(r: mixed, g: mixed, b: mixed, a?: mixed): string | null {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\nexport type Value = null | string | boolean | number | Color | Collator | Formatted | ResolvedImage | $ReadOnlyArray<Value> | { +[string]: Value }\n\nexport function isValue(mixed: mixed): boolean {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value: Value): Type {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType: Type | typeof undefined;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value: Value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n","// @flow\n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values';\nimport Formatted from '../types/formatted';\n\nimport type {Type} from '../types';\nimport type {Value}  from '../values';\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\n\nclass Literal implements Expression {\n    type: Type;\n    value: Value;\n\n    constructor(type: Type, value: Value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]: any);\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate() {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    possibleOutputs() {\n        return [this.value];\n    }\n\n    serialize(): Array<mixed> {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value: any);\n        }\n    }\n}\n\nexport default Literal;\n","// @flow\n\nclass RuntimeError {\n    name: string;\n    message: string;\n\n    constructor(message: string) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON() {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n","// @flow\n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types';\nimport RuntimeError from '../runtime_error';\nimport {typeOf} from '../values';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Value} from '../values';\nimport type {Type} from '../types';\n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name: string = (args[0]: any);\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn: (Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return [].concat(...this.args.map((arg) => arg.possibleOutputs()));\n    }\n\n    serialize(): Array<mixed> {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n","// @flow\n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types';\nimport Formatted, {FormattedSection} from '../types/formatted';\nimport {toString, typeOf} from '../values';\n\nimport type {Expression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\ntype FormattedSectionExpression = {\n    // Content of a section may be Image expression or other\n    // type of expression that is coercable to 'string'.\n    content: Expression,\n    scale: Expression | null;\n    font: Expression | null;\n    textColor: Expression | null;\n}\n\nexport default class FormatExpression implements Expression {\n    type: Type;\n    sections: Array<FormattedSectionExpression>;\n\n    constructor(sections: Array<FormattedSectionExpression>) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections: Array<FormattedSectionExpression> = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]: any);\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn: (Expression) => void) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    possibleOutputs() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return [undefined];\n    }\n\n    serialize() {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n","// @flow\n\nimport {ResolvedImageType, StringType} from '../types';\nimport ResolvedImage from '../types/resolved_image';\n\nimport type {Expression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\nexport default class ImageExpression implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        let available = false;\n\n        if (ctx.availableImages && ctx.availableImages.indexOf(evaluatedImageName) > -1) {\n            available = true;\n        }\n\n        return new ResolvedImage({name: evaluatedImageName, available});\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.input);\n    }\n\n    possibleOutputs() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return [undefined];\n    }\n\n    serialize() {\n        return [\"image\", this.input.serialize()];\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types';\nimport {Color, toString as valueToString, validateRGBA} from '../values';\nimport RuntimeError from '../runtime_error';\nimport Formatted from '../types/formatted';\nimport FormatExpression from '../definitions/format';\nimport ImageExpression from '../definitions/image';\nimport ResolvedImage from '../types/resolved_image';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Value} from '../values';\nimport type {Type} from '../types';\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name: string = (args[0]: any);\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]: any) / 255, (input[1]: any) / 255, (input[2]: any) / 255, (input[3]: any));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn: (Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return [].concat(...this.args.map((arg) => arg.possibleOutputs()));\n    }\n\n    serialize() {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n","// @flow\n\nimport {Color} from './values';\nimport type {FormattedSection} from './types/formatted';\nimport type {GlobalProperties, Feature, FeatureState} from './index';\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n    globals: GlobalProperties;\n    feature: ?Feature;\n    featureState: ?FeatureState;\n    formattedSection: ?FormattedSection;\n    availableImages: ?Array<string>;\n\n    _parseColorCache: {[string]: ?Color};\n\n    constructor() {\n        this.globals = (null: any);\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n    }\n\n    id() {\n        return this.feature && 'id' in this.feature ? this.feature.id : null;\n    }\n\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n\n    parseColor(input: string): ?Color {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n","// @flow\n\nimport {toString} from './types';\n\nimport ParsingContext from './parsing_context';\nimport EvaluationContext from './evaluation_context';\nimport assert from 'assert';\n\nimport type {Expression, ExpressionRegistry} from './expression';\nimport type {Type} from './types';\nimport type {Value} from './values';\n\nexport type Varargs = {| type: Type |};\ntype Signature = Array<Type> | Varargs;\ntype Evaluate = (EvaluationContext, Array<Expression>) => Value;\ntype Definition = [Type, Signature, Evaluate] |\n    {|type: Type, overloads: Array<[Signature, Evaluate]>|};\n\nclass CompoundExpression implements Expression {\n    name: string;\n    type: Type;\n    _evaluate: Evaluate;\n    args: Array<Expression>;\n\n    static definitions: { [string]: Definition };\n\n    constructor(name: string, type: Type, evaluate: Evaluate, args: Array<Expression>) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn: (Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    possibleOutputs() {\n        return [undefined];\n    }\n\n    serialize(): Array<mixed> {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        const op: string = (args[0]: any);\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext: ParsingContext = (null: any);\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs: Array<Expression> = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry: ExpressionRegistry,\n        definitions: { [string]: Definition }\n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature: Signature): string {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n","// @flow\n\nimport {StringType, BooleanType, CollatorType} from '../types';\nimport Collator from '../types/collator';\n\nimport type {Expression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\nexport default class CollatorExpression implements Expression {\n    type: Type;\n    caseSensitive: Expression;\n    diacriticSensitive: Expression;\n    locale: Expression | null;\n\n    constructor(caseSensitive: Expression, diacriticSensitive: Expression, locale: Expression | null) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    possibleOutputs() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possibleOutputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possibleOutputs anyway, so we can get away with leaving this undefined for now.\n        return [undefined];\n    }\n\n    serialize() {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n","// @flow\n\nimport CompoundExpression from './compound_expression';\n\nimport type {Expression} from './expression.js';\n\nfunction isFeatureConstant(e: Expression) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e: Expression) {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e: Expression, properties: Array<string>) {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n","// @flow\n\nimport type {Type} from '../types';\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext  from '../evaluation_context';\n\nclass Var implements Expression {\n    type: Type;\n    name: string;\n    boundExpression: Expression;\n\n    constructor(name: string, boundExpression: Expression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    possibleOutputs() {\n        return [undefined];\n    }\n\n    serialize() {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n","// @flow\n\nimport Scope from './scope';\nimport {checkSubtype} from './types';\nimport ParsingError from './parsing_error';\nimport Literal from './definitions/literal';\nimport Assertion from './definitions/assertion';\nimport Coercion from './definitions/coercion';\nimport EvaluationContext from './evaluation_context';\nimport CompoundExpression from './compound_expression';\nimport CollatorExpression from './definitions/collator';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant';\nimport Var from './definitions/var';\n\nimport type {Expression, ExpressionRegistry} from './expression';\nimport type {Type} from './types';\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    registry: ExpressionRegistry;\n    path: Array<number>;\n    key: string;\n    scope: Scope;\n    errors: Array<ParsingError>;\n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    expectedType: ?Type;\n\n    constructor(\n        registry: ExpressionRegistry,\n        path: Array<number> = [],\n        expectedType: ?Type,\n        scope: Scope = new Scope(),\n        errors: Array<ParsingError> = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr: mixed,\n        index?: number,\n        expectedType?: ?Type,\n        bindings?: Array<[string, Expression]>,\n        options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'} = {}\n    ): ?Expression {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr: mixed, options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'}): ?Expression {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation: 'assert' | 'coerce' | 'omit') {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index: number, expectedType?: ?Type, bindings?: Array<[string, Expression]>) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error: string, ...keys: Array<number>) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected: Type, t: Type): ?string {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression: Expression) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'accumulated', 'is-supported-script']);\n}\n","// @flow\n\nimport RuntimeError from './runtime_error';\n\nimport type {Expression} from './expression';\n\nexport type Stops = Array<[number, Expression]>;\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops: Array<number>, input: number) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n","// @flow\n\nimport {NumberType} from '../types';\n\nimport {findStopLessThanOrEqualTo} from '../stops';\n\nimport type {Stops} from '../stops';\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Value} from '../values';\nimport type {Type} from '../types';\n\nclass Step implements Expression {\n    type: Type;\n\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, input: Expression, stops: Stops) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return [].concat(...this.outputs.map((output) => output.possibleOutputs()));\n    }\n\n    serialize() {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n","/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype.sampleCurveX = function(t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\n\nUnitBezier.prototype.sampleCurveY = function(t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\n\nUnitBezier.prototype.sampleCurveDerivativeX = function(t) {\n    return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n};\n\nUnitBezier.prototype.solveCurveX = function(x, epsilon) {\n    if (typeof epsilon === 'undefined') epsilon = 1e-6;\n\n    var t0, t1, t2, x2, i;\n\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon) return t2;\n\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 1e-6) break;\n\n        t2 = t2 - x2 / d2;\n    }\n\n    // Fall back to the bisection method for reliability.\n    t0 = 0.0;\n    t1 = 1.0;\n    t2 = x;\n\n    if (t2 < t0) return t0;\n    if (t2 > t1) return t1;\n\n    while (t0 < t1) {\n\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon) return t2;\n\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n\n    // Failure.\n    return t2;\n};\n\nUnitBezier.prototype.solve = function(x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n","// @flow\n\nimport Color from './color';\n\nexport function number(a: number, b: number, t: number) {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from: Color, to: Color, t: number) {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from: Array<number>, to: Array<number>, t: number): Array<number> {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n","// @flow\n\nimport Color from './color';\n\nimport {number as interpolateNumber} from './interpolate';\n\ntype LABColor = {\n    l: number,\n    a: number,\n    b: number,\n    alpha: number\n};\n\ntype HCLColor = {\n    h: number,\n    c: number,\n    l: number,\n    alpha: number\n};\n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t: number) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t: number) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x: number) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x: number) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor: Color): LABColor {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor: LABColor): Color {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from: LABColor, to: LABColor, t: number) {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor: Color): HCLColor {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor: HCLColor): Color {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a: number, b: number, t: number) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from: HCLColor, to: HCLColor, t: number) {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n","// @flow\n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate';\nimport {toString, NumberType, ColorType} from '../types';\nimport {findStopLessThanOrEqualTo} from '../stops';\nimport {hcl, lab} from '../../util/color_spaces';\n\nimport type {Stops} from '../stops';\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Value} from '../values';\nimport type {Type} from '../types';\n\nexport type InterpolationType =\n    { name: 'linear' } |\n    { name: 'exponential', base: number } |\n    { name: 'cubic-bezier', controlPoints: [number, number, number, number] };\n\nclass Interpolate implements Expression {\n    type: Type;\n\n    operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab';\n    interpolation: InterpolationType;\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab', interpolation: InterpolationType, input: Expression, stops: Stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation: InterpolationType, input: number, lower: number, upper: number) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints: any)\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator: any), interpolation, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]: any)(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return [].concat(...this.outputs.map((output) => output.possibleOutputs()));\n    }\n\n    serialize(): Array<mixed> {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n","// @flow\n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types';\nimport ResolvedImage from '../types/resolved_image';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Value} from '../values';\nimport type {Type} from '../types';\n\nclass Coalesce implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType: Type = (null: any);\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType: any), parsedArgs);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        let result = null;\n        let argCount = 0;\n        let requestedImageName;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image name so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                if (!requestedImageName) {\n                    requestedImageName = result.name;\n                }\n                result = null;\n                if (argCount === this.args.length) {\n                    result = requestedImageName;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn: (Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return [].concat(...this.args.map((arg) => arg.possibleOutputs()));\n    }\n\n    serialize() {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n","// @flow\n\nimport type {Type} from '../types';\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext  from '../evaluation_context';\n\nclass Let implements Expression {\n    type: Type;\n    bindings: Array<[string, Expression]>;\n    result: Expression;\n\n    constructor(bindings: Array<[string, Expression]>, result: Expression) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn: (Expression) => void) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings: Array<[string, Expression]> = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    possibleOutputs() {\n        return this.result.possibleOutputs();\n    }\n\n    serialize() {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n","// @flow\n\nimport {array, ValueType, NumberType} from '../types';\n\nimport RuntimeError from '../runtime_error';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type, ArrayType} from '../types';\nimport type {Value} from '../values';\n\nclass At implements Expression {\n    type: Type;\n    index: Expression;\n    input: Expression;\n\n    constructor(type: Type, index: Expression, input: Expression) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t: ArrayType = (input.type: any);\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const index = ((this.index.evaluate(ctx): any): number);\n        const array = ((this.input.evaluate(ctx): any): Array<Value>);\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    possibleOutputs() {\n        return [undefined];\n    }\n\n    serialize() {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n","// @flow\n\nimport {ValueType, BooleanType, toString} from '../types';\nimport RuntimeError from '../runtime_error';\nimport {typeOf} from '../values';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\nimport type {Value} from '../values';\n\nfunction isComparableType(type: Type) {\n    return type.kind === 'boolean' ||\n           type.kind === 'string' ||\n           type.kind === 'number' ||\n           type.kind === 'null' ||\n           type.kind === 'value';\n}\n\nfunction isComparableRuntimeValue(needle: boolean | string | number | null) {\n    return typeof needle === 'boolean' ||\n           typeof needle === 'string' ||\n           typeof needle === 'number';\n}\n\nfunction isSearchableRuntimeValue(haystack: Array<Value> | string) {\n    return Array.isArray(haystack) ||\n           typeof haystack === 'string';\n}\n\nclass In implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n\n    constructor(needle: Expression, haystack: Expression) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isComparableType(needle.type)) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (!needle || !haystack) return false;\n\n        if (!isComparableRuntimeValue(needle)) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string or number, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isSearchableRuntimeValue(haystack)) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    possibleOutputs() {\n        return [true, false];\n    }\n\n    serialize() {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n","// @flow\n\nimport assert from 'assert';\n\nimport {typeOf} from '../values';\nimport {ValueType, type Type} from '../types';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Value} from '../values';\n\n// Map input label values to output expression index\ntype Cases = {[number | string]: number};\n\nclass Match implements Expression {\n    type: Type;\n    inputType: Type;\n\n    input: Expression;\n    cases: Cases;\n    outputs: Array<Expression>;\n    otherwise: Expression;\n\n    constructor(inputType: Type, outputType: Type, input: Expression, cases: Cases, outputs: Array<Expression>, otherwise: Expression) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType: any), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType: any), (outputType: any), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const input = (this.input.evaluate(ctx): any);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return []\n            .concat(...this.outputs.map((out) => out.possibleOutputs()))\n            .concat(this.otherwise.possibleOutputs());\n    }\n\n    serialize(): Array<mixed> {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput: Array<[number, Array<number | string>]> = [];\n        const outputLookup: {[index: number]: number} = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n","// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Value} from '../values';\nimport type {Type} from '../types';\n\ntype Branches = Array<[Expression, Expression]>;\n\nclass Case implements Expression {\n    type: Type;\n\n    branches: Branches;\n    otherwise: Expression;\n\n    constructor(type: Type, branches: Branches, otherwise: Expression) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType: ?Type;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType: any), branches, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn: (Expression) => void) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    possibleOutputs(): Array<Value | void> {\n        return []\n            .concat(...this.branches.map(([_, out]) => out.possibleOutputs()))\n            .concat(this.otherwise.possibleOutputs());\n    }\n\n    serialize() {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n","// @flow\n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types';\nimport Assertion from './assertion';\nimport {typeOf} from '../values';\nimport RuntimeError from '../runtime_error';\n\nimport type {Expression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\ntype ComparisonOperator = '==' | '!=' | '<' | '>' | '<=' | '>=' ;\n\nfunction isComparableType(op: ComparisonOperator, type: Type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx, a, b) { return a === b; }\nfunction neq(ctx, a, b) { return a !== b; }\nfunction lt(ctx, a, b) { return a < b; }\nfunction gt(ctx, a, b) { return a > b; }\nfunction lteq(ctx, a, b) { return a <= b; }\nfunction gteq(ctx, a, b) { return a >= b; }\n\nfunction eqCollate(ctx, a, b, c) { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx, a, b, c) { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx, a, b, c) { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx, a, b, c) { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx, a, b, c) { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx, a, b, c) { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op: ComparisonOperator, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison implements Expression {\n        type: Type;\n        lhs: Expression;\n        rhs: Expression;\n        collator: ?Expression;\n        hasUntypedArgument: boolean;\n\n        constructor(lhs: Expression, rhs: Expression, collator: ?Expression) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op: ComparisonOperator = (args[0]: any);\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx: EvaluationContext) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn: (Expression) => void) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        possibleOutputs() {\n            return [true, false];\n        }\n\n        serialize() {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals = makeComparison('==', eq, eqCollate);\nexport const NotEquals = makeComparison('!=', neq, neqCollate);\nexport const LessThan = makeComparison('<', lt, ltCollate);\nexport const GreaterThan = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n","// @flow\n\nimport {StringType, NumberType} from '../types';\n\nimport type {Expression} from '../expression';\nimport type EvaluationContext from '../evaluation_context';\nimport type ParsingContext from '../parsing_context';\nimport type {Type} from '../types';\n\ndeclare var Intl: {\n    NumberFormat: Class<Intl$NumberFormat>\n};\n\ndeclare class Intl$NumberFormat {\n    constructor (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    static (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    format(a: number): string;\n\n    resolvedOptions(): any;\n}\n\ntype NumberFormatOptions = {\n    style?: 'decimal' | 'currency' | 'percent';\n    currency?: null | string;\n    minimumFractionDigits?: null | string;\n    maximumFractionDigits?: null | string;\n};\n\nexport default class NumberFormat implements Expression {\n    type: Type;\n    number: Expression;\n    locale: Expression | null;   // BCP 47 language tag\n    currency: Expression | null; // ISO 4217 currency code, required if style=currency\n    minFractionDigits: Expression | null; // Default 0\n    maxFractionDigits: Expression | null; // Default 3\n\n    constructor(number: Expression,\n                locale: Expression | null,\n                currency: Expression | null,\n                minFractionDigits: Expression | null,\n                maxFractionDigits: Expression | null) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style: this.currency ? \"currency\" : \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    possibleOutputs() {\n        return [undefined];\n    }\n\n    serialize() {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n","// @flow\n\nimport {NumberType, toString} from '../types';\n\nimport {typeOf} from '../values';\nimport RuntimeError from '../runtime_error';\n\nimport type {Expression} from '../expression';\nimport type ParsingContext from '../parsing_context';\nimport type EvaluationContext from '../evaluation_context';\nimport type {Type} from '../types';\n\nclass Length implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx: EvaluationContext) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn: (Expression) => void) {\n        fn(this.input);\n    }\n\n    possibleOutputs() {\n        return [undefined];\n    }\n\n    serialize() {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n","// @flow\n\nimport {\n    type Type,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values';\nimport CompoundExpression from '../compound_expression';\nimport RuntimeError from '../runtime_error';\nimport Let from './let';\nimport Var from './var';\nimport Literal from './literal';\nimport Assertion from './assertion';\nimport Coercion from './coercion';\nimport At from './at';\nimport In from './in';\nimport Match from './match';\nimport Case from './case';\nimport Step from './step';\nimport Interpolate from './interpolate';\nimport Coalesce from './coalesce';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison';\nimport CollatorExpression from './collator';\nimport NumberFormat from './number_format';\nimport FormatExpression from './format';\nimport ImageExpression from './image';\nimport Length from './length';\n\nimport type {Varargs} from '../compound_expression';\nimport type {ExpressionRegistry} from '../expression';\n\nconst expressions: ExpressionRegistry = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type: Type): Varargs {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k: any).value] === (v: any).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v: any).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v: any).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k: any).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => ctx.id() !== null\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v: any).value.indexOf(ctx.properties()[(k: any).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k: any).value], (v: any).value, 0, (v: any).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n","// @flow\n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nexport type Result<T, E> =\n    | {| result: 'success', value: T |}\n    | {| result: 'error', value: E |};\n\nexport function success<T, E>(value: T): Result<T, E> {\n    return {result: 'success', value};\n}\n\nexport function error<T, E>(value: E): Result<T, E> {\n    return {result: 'error', value};\n}\n","// @flow\n\nimport type {StylePropertySpecification} from '../style-spec';\n\nexport function supportsPropertyExpression(spec: StylePropertySpecification): boolean {\n    return spec['property-type'] === 'data-driven' || spec['property-type'] === 'cross-faded-data-driven';\n}\n\nexport function supportsZoomExpression(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.interpolated;\n}\n","// @flow\n\nexport default function getType(val: mixed): string {\n    if (val instanceof Number) {\n        return 'number';\n    } else if (val instanceof String) {\n        return 'string';\n    } else if (val instanceof Boolean) {\n        return 'boolean';\n    } else if (Array.isArray(val)) {\n        return 'array';\n    } else if (val === null) {\n        return 'null';\n    } else {\n        return typeof val;\n    }\n}\n","\nimport * as colorSpaces from '../util/color_spaces';\nimport Color from '../util/color';\nimport extend from '../util/extend';\nimport getType from '../util/get_type';\nimport * as interpolate from '../util/interpolate';\nimport Interpolate from '../expression/definitions/interpolate';\nimport Formatted from '../expression/types/formatted';\nimport ResolvedImage from '../expression/types/resolved_image';\nimport {supportsInterpolation} from '../util/properties';\nimport {findStopLessThanOrEqualTo} from '../expression/stops';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n","// @flow\n\nimport assert from 'assert';\n\nimport extend from '../util/extend';\nimport ParsingError from './parsing_error';\nimport ParsingContext from './parsing_context';\nimport EvaluationContext from './evaluation_context';\nimport CompoundExpression from './compound_expression';\nimport Step from './definitions/step';\nimport Interpolate from './definitions/interpolate';\nimport Coalesce from './definitions/coalesce';\nimport Let from './definitions/let';\nimport definitions from './definitions';\nimport * as isConstant from './is_constant';\nimport RuntimeError from './runtime_error';\nimport {success, error} from '../util/result';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties';\n\nimport type {Type, EvaluationKind} from './types';\nimport type {Value} from './values';\nimport type {Expression} from './expression';\nimport type {StylePropertySpecification} from '../style-spec';\nimport type {Result} from '../util/result';\nimport type {InterpolationType} from './definitions/interpolate';\nimport type {PropertyValueSpecification} from '../types';\nimport type {FormattedSection} from './types/formatted';\n\nexport type Feature = {\n    +type: 1 | 2 | 3 | 'Unknown' | 'Point' | 'MultiPoint' | 'LineString' | 'MultiLineString' | 'Polygon' | 'MultiPolygon',\n    +id?: any,\n    +properties: {[string]: any},\n    +patterns?: {[string]: {\"min\": string, \"mid\": string, \"max\": string}}\n};\n\nexport type FeatureState = {[string]: any};\n\nexport type GlobalProperties = $ReadOnly<{\n    zoom: number,\n    heatmapDensity?: number,\n    lineProgress?: number,\n    isSupportedScript?: (string) => boolean,\n    accumulated?: Value\n}>;\n\nexport class StyleExpression {\n    expression: Expression;\n\n    _evaluator: EvaluationContext;\n    _defaultValue: Value;\n    _warningHistory: {[key: string]: boolean};\n    _enumValues: ?{[string]: any};\n\n    constructor(expression: Expression, propertySpec: ?StylePropertySpecification) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression: mixed) {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression: mixed, propertySpec: ?StylePropertySpecification): Result<StyleExpression, Array<ParsingError>> {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    isStateDependent: boolean;\n    _styleExpression: StyleExpression;\n\n    constructor(kind: Kind, expression: StyleExpression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    zoomStops: Array<number>;\n    isStateDependent: boolean;\n\n    _styleExpression: StyleExpression;\n    interpolationType: ?InterpolationType;\n\n    constructor(kind: Kind, expression: StyleExpression, zoomStops: Array<number>, interpolationType?: InterpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input: number, lower: number, upper: number): number {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\nexport type ConstantExpression = {\n    kind: 'constant',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, availableImages?: Array<string>) => any,\n}\n\nexport type SourceExpression = {\n    kind: 'source',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n};\n\nexport type CameraExpression = {\n    kind: 'camera',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, availableImages?: Array<string>) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport type CompositeExpression = {\n    kind: 'composite',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport type StylePropertyExpression =\n    | ConstantExpression\n    | SourceExpression\n    | CameraExpression\n    | CompositeExpression;\n\nexport function createPropertyExpression(expression: mixed, propertySpec: StylePropertySpecification): Result<StylePropertyExpression, Array<ParsingError>> {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value): ConstantExpression) :\n            (new ZoomConstantExpression('source', expression.value): SourceExpression));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType): CameraExpression) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType): CompositeExpression));\n}\n\nimport {isFunction, createFunction} from '../function';\nimport {Color} from './values';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction<T> {\n    _parameters: PropertyValueSpecification<T>;\n    _specification: StylePropertySpecification;\n\n    kind: EvaluationKind;\n    evaluate: (globals: GlobalProperties, feature?: Feature) => any;\n    interpolationFactor: ?(input: number, lower: number, upper: number) => number;\n    zoomStops: ?Array<number>;\n\n    constructor(parameters: PropertyValueSpecification<T>, specification: StylePropertySpecification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized: {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification}) {\n        return ((new StylePropertyFunction(serialized._parameters, serialized._specification)): StylePropertyFunction<T>);\n    }\n\n    static serialize(input: StylePropertyFunction<T>) {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression<T>(value: PropertyValueSpecification<T>, specification: StylePropertySpecification): StylePropertyExpression {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification): any);\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant: any = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression: Expression): Step | Interpolate | ParsingError | null {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types';\n\nfunction getExpectedType(spec: StylePropertySpecification): Type {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec: StylePropertySpecification): Value {\n    if (spec.type === 'color' && isFunction(spec.default)) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n","// @flow\n\nimport assert from 'assert';\nimport type {StylePropertySpecification} from '../style-spec';\n\nexport default convertFunction;\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nfunction convertFunction(parameters: any, propertySpec: StylePropertySpecification) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec): Array<mixed> {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n        expression.push(convertLiteral(coalesce(parameters.default, propertySpec.default)));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(convertLiteral(coalesce(parameters.default, propertySpec.default)));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [getInterpolateOperator(parameters), ['exponential', base], ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), ['exponential', base], input];\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression: any).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s: string) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n","// @flow\n\nimport {createExpression} from '../expression';\n\nimport type {GlobalProperties} from '../expression';\nexport type FeatureFilter = (globalProperties: GlobalProperties, feature: VectorTileFeature) => boolean;\n\nexport default createFilter;\nexport {isExpressionFilter};\n\nfunction isExpressionFilter(filter: any) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && Array.isArray(filter[2]);\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\nconst filterSpec = {\n    'type': 'boolean',\n    'default': false,\n    'transition': false,\n    'property-type': 'data-driven',\n    'expression': {\n        'interpolated': false,\n        'parameters': ['zoom', 'feature']\n    }\n};\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter: any): FeatureFilter {\n    if (filter === null || filter === undefined) {\n        return () => true;\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n\n    const compiled = createExpression(filter, filterSpec);\n    if (compiled.result === 'error') {\n        throw new Error(compiled.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        return (globalProperties: GlobalProperties, feature: VectorTileFeature) => compiled.value.evaluate(globalProperties, feature);\n    }\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction convertFilter(filter: ?Array<any>): mixed {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters: Array<Array<any>>) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property: string, values: Array<any>) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property: string) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter: mixed) {\n    return ['!', filter];\n}\n","// @flow\n\nimport {isExpressionFilter} from './index';\n\nimport type {FilterSpecification} from '../types';\n\ntype ExpectedTypes = {[string]: 'string' | 'number' | 'boolean'};\n\n/**\n * Convert the given legacy filter to (the JSON representation of) an\n * equivalent expression\n * @private\n */\nexport default function convertFilter(filter: FilterSpecification): mixed {\n    return _convertFilter(filter, {});\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evalaution error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction _convertFilter(filter: FilterSpecification, expectedTypes: ExpectedTypes): mixed {\n    if (isExpressionFilter(filter)) { return filter; }\n\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n\n    let converted;\n\n    if (\n        op === '==' ||\n        op === '!=' ||\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>='\n    ) {\n        const [, property, value] = (filter: any);\n        converted = convertComparisonOp(property, value, op, expectedTypes);\n    } else if (op === 'any') {\n        const children = (filter: any).slice(1).map(f => {\n            const types = {};\n            const child = _convertFilter(f, types);\n            const typechecks = runtimeTypeChecks(types);\n            return typechecks === true ? child : ['case', typechecks, child, false];\n        });\n        return ['any'].concat(children);\n    } else if (op === 'all') {\n        const children = (filter: any).slice(1).map(f => _convertFilter(f, expectedTypes));\n        return children.length > 1 ? ['all'].concat(children) : [].concat(...children);\n    } else if (op === 'none') {\n        return ['!', _convertFilter(['any'].concat(filter.slice(1)), {})];\n    } else if (op === 'in') {\n        converted = convertInOp((filter[1]: any), filter.slice(2));\n    } else if (op === '!in') {\n        converted = convertInOp((filter[1]: any), filter.slice(2), true);\n    } else if (op === 'has') {\n        converted = convertHasOp((filter[1]: any));\n    } else if (op === '!has') {\n        converted = ['!', convertHasOp((filter[1]: any))];\n    } else {\n        converted = true;\n    }\n\n    return converted;\n}\n\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes: ExpectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0) return true;\n    if (conditions.length === 1) return conditions[0];\n    return ['all'].concat(conditions);\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string, expectedTypes: ?ExpectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    if (expectedTypes && value !== null) {\n        const type = ((typeof value): any);\n        expectedTypes[property] = type;\n    }\n\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    } else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n\n    return [op, get, value];\n}\n\nfunction convertInOp(property: string, values: Array<any>, negate = false) {\n    if (values.length === 0) return negate;\n\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n\n    return [ negate ? 'all' : 'any' ].concat(\n        values.map(v => [negate ? '!=' : '==', get, v])\n    );\n}\n\nfunction convertHasOp(property: string) {\n    if (property === '$type') {\n        return true;\n    } else if (property === '$id') {\n        return ['!=', ['id'], null];\n    } else {\n        return ['has', property];\n    }\n}\n","// @flow\n\nimport {\n    eachLayer,\n    eachProperty\n} from '../visit';\nimport {isExpression} from '../expression';\nimport convertFunction, {convertTokenString} from '../function/convert';\nimport convertFilter from '../feature_filter/convert';\n\nimport type {StyleSpecification} from '../types';\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n */\nexport default function(style: StyleSpecification) {\n    const converted = [];\n\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = (convertFilter(layer.filter): any);\n        }\n    });\n\n    eachProperty(style, {paint: true, layout: true}, ({path, value, reference, set}) => {\n        if (isExpression(value)) return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        } else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n\n    return style;\n}\n\n","\nimport migrateToV8 from './migrate/v8';\nimport migrateToExpressions from './migrate/expressions';\n\n/**\n * Migrate a Mapbox GL Style to the latest version.\n *\n * @private\n * @alias migrate\n * @param {object} style a Mapbox GL Style\n * @returns {Object} a migrated style\n * @example\n * var fs = require('fs');\n * var migrate = require('mapbox-gl-style-spec').migrate;\n * var style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nexport default function(style) {\n    let migrated = false;\n\n    if (style.version === 7) {\n        style = migrateToV8(style);\n        migrated = true;\n    }\n\n    if (style.version === 8) {\n        migrated = migrateToExpressions(style);\n        migrated = true;\n    }\n\n    if (!migrated) {\n        throw new Error('cannot migrate from', style.version);\n    }\n\n    return style;\n}\n","\nexport default function (style) {\n    const styleIDs = [];\n    const sourceIDs = [];\n    const compositedSourceLayers = [];\n\n    for (const id in style.sources) {\n        const source = style.sources[id];\n\n        if (source.type !== \"vector\")\n            continue;\n\n        const match = /^mapbox:\\/\\/(.*)/.exec(source.url);\n        if (!match)\n            continue;\n\n        styleIDs.push(id);\n        sourceIDs.push(match[1]);\n    }\n\n    if (styleIDs.length < 2)\n        return style;\n\n    styleIDs.forEach((id) => {\n        delete style.sources[id];\n    });\n\n    const compositeID = sourceIDs.join(\",\");\n\n    style.sources[compositeID] = {\n        \"type\": \"vector\",\n        \"url\": `mapbox://${compositeID}`\n    };\n\n    style.layers.forEach((layer) => {\n        if (styleIDs.indexOf(layer.source) >= 0) {\n            layer.source = compositeID;\n\n            if ('source-layer' in layer) {\n                if (compositedSourceLayers.indexOf(layer['source-layer']) >= 0) {\n                    throw new Error('Conflicting source layer names');\n                } else {\n                    compositedSourceLayers.push(layer['source-layer']);\n                }\n            }\n        }\n    });\n\n    return style;\n}\n","// @flow\n\n/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a: ?mixed, b: ?mixed): boolean {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length) return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i])) return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object')) return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length) return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\nexport default deepEqual;\n","\nimport isEqual from './util/deep_equal';\n\nconst operations = {\n\n    /*\n     * { command: 'setStyle', args: [stylesheet] }\n     */\n    setStyle: 'setStyle',\n\n    /*\n     * { command: 'addLayer', args: [layer, 'beforeLayerId'] }\n     */\n    addLayer: 'addLayer',\n\n    /*\n     * { command: 'removeLayer', args: ['layerId'] }\n     */\n    removeLayer: 'removeLayer',\n\n    /*\n     * { command: 'setPaintProperty', args: ['layerId', 'prop', value] }\n     */\n    setPaintProperty: 'setPaintProperty',\n\n    /*\n     * { command: 'setLayoutProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayoutProperty: 'setLayoutProperty',\n\n    /*\n     * { command: 'setFilter', args: ['layerId', filter] }\n     */\n    setFilter: 'setFilter',\n\n    /*\n     * { command: 'addSource', args: ['sourceId', source] }\n     */\n    addSource: 'addSource',\n\n    /*\n     * { command: 'removeSource', args: ['sourceId'] }\n     */\n    removeSource: 'removeSource',\n\n    /*\n     * { command: 'setGeoJSONSourceData', args: ['sourceId', data] }\n     */\n    setGeoJSONSourceData: 'setGeoJSONSourceData',\n\n    /*\n     * { command: 'setLayerZoomRange', args: ['layerId', 0, 22] }\n     */\n    setLayerZoomRange: 'setLayerZoomRange',\n\n    /*\n     * { command: 'setLayerProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayerProperty: 'setLayerProperty',\n\n    /*\n     * { command: 'setCenter', args: [[lon, lat]] }\n     */\n    setCenter: 'setCenter',\n\n    /*\n     * { command: 'setZoom', args: [zoom] }\n     */\n    setZoom: 'setZoom',\n\n    /*\n     * { command: 'setBearing', args: [bearing] }\n     */\n    setBearing: 'setBearing',\n\n    /*\n     * { command: 'setPitch', args: [pitch] }\n     */\n    setPitch: 'setPitch',\n\n    /*\n     * { command: 'setSprite', args: ['spriteUrl'] }\n     */\n    setSprite: 'setSprite',\n\n    /*\n     * { command: 'setGlyphs', args: ['glyphsUrl'] }\n     */\n    setGlyphs: 'setGlyphs',\n\n    /*\n     * { command: 'setTransition', args: [transition] }\n     */\n    setTransition: 'setTransition',\n\n    /*\n     * { command: 'setLighting', args: [lightProperties] }\n     */\n    setLight: 'setLight'\n\n};\n\nfunction addSource(sourceId, after, commands) {\n    commands.push({command: operations.addSource, args: [sourceId, after[sourceId]]});\n}\n\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    commands.push({command: operations.removeSource, args: [sourceId]});\n    sourcesRemoved[sourceId] = true;\n}\n\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\n\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!before[sourceId].hasOwnProperty(prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!after[sourceId].hasOwnProperty(prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction diffSources(before, after, commands, sourcesRemoved) {\n    before = before || {};\n    after = after || {};\n\n    let sourceId;\n\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!before.hasOwnProperty(sourceId)) continue;\n        if (!after.hasOwnProperty(sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!after.hasOwnProperty(sourceId)) continue;\n        if (!before.hasOwnProperty(sourceId)) {\n            addSource(sourceId, after, commands);\n        } else if (!isEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                commands.push({command: operations.setGeoJSONSourceData, args: [sourceId, after[sourceId].data]});\n            } else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\n\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command) {\n    before = before || {};\n    after = after || {};\n\n    let prop;\n\n    for (prop in before) {\n        if (!before.hasOwnProperty(prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({command, args: [layerId, prop, after[prop], klass]});\n        }\n    }\n    for (prop in after) {\n        if (!after.hasOwnProperty(prop) || before.hasOwnProperty(prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({command, args: [layerId, prop, after[prop], klass]});\n        }\n    }\n}\n\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\n\nfunction diffLayers(before, after, commands) {\n    before = before || [];\n    after = after || [];\n\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n\n    let i, d, layerId, beforeLayer, afterLayer, insertBeforeLayerId, prop;\n\n    // remove layers\n    for (i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!afterIndex.hasOwnProperty(layerId)) {\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n\n    // add/reorder layers\n    for (i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n\n        if (tracker[tracker.length - 1 - i] === layerId) continue;\n\n        if (beforeIndex.hasOwnProperty(layerId)) {\n            // remove the layer before we insert at the correct position\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        commands.push({command: operations.addLayer, args: [afterIndex[layerId], insertBeforeLayerId]});\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n\n    // update layers\n    for (i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || isEqual(beforeLayer, afterLayer)) continue;\n\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!isEqual(beforeLayer.source, afterLayer.source) || !isEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !isEqual(beforeLayer.type, afterLayer.type)) {\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            commands.push({command: operations.addLayer, args: [afterLayer, insertBeforeLayerId]});\n            continue;\n        }\n\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, operations.setLayoutProperty);\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, operations.setPaintProperty);\n        if (!isEqual(beforeLayer.filter, afterLayer.filter)) {\n            commands.push({command: operations.setFilter, args: [layerId, afterLayer.filter]});\n        }\n        if (!isEqual(beforeLayer.minzoom, afterLayer.minzoom) || !isEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            commands.push({command: operations.setLayerZoomRange, args: [layerId, afterLayer.minzoom, afterLayer.maxzoom]});\n        }\n\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                commands.push({command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]]});\n            }\n        }\n        for (prop in afterLayer) {\n            if (!afterLayer.hasOwnProperty(prop) || beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                commands.push({command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]]});\n            }\n        }\n    }\n}\n\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the mapbox-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nfunction diffStyles(before, after) {\n    if (!before) return [{command: operations.setStyle, args: [after]}];\n\n    let commands = [];\n\n    try {\n        // Handle changes to top-level properties\n        if (!isEqual(before.version, after.version)) {\n            return [{command: operations.setStyle, args: [after]}];\n        }\n        if (!isEqual(before.center, after.center)) {\n            commands.push({command: operations.setCenter, args: [after.center]});\n        }\n        if (!isEqual(before.zoom, after.zoom)) {\n            commands.push({command: operations.setZoom, args: [after.zoom]});\n        }\n        if (!isEqual(before.bearing, after.bearing)) {\n            commands.push({command: operations.setBearing, args: [after.bearing]});\n        }\n        if (!isEqual(before.pitch, after.pitch)) {\n            commands.push({command: operations.setPitch, args: [after.pitch]});\n        }\n        if (!isEqual(before.sprite, after.sprite)) {\n            commands.push({command: operations.setSprite, args: [after.sprite]});\n        }\n        if (!isEqual(before.glyphs, after.glyphs)) {\n            commands.push({command: operations.setGlyphs, args: [after.glyphs]});\n        }\n        if (!isEqual(before.transition, after.transition)) {\n            commands.push({command: operations.setTransition, args: [after.transition]});\n        }\n        if (!isEqual(before.light, after.light)) {\n            commands.push({command: operations.setLight, args: [after.light]});\n        }\n\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if (sourcesRemoved[layer.source]) {\n                    commands.push({command: operations.removeLayer, args: [layer.id]});\n                } else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n        commands = commands.concat(removeOrAddSourceCommands);\n\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n\n    } catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{command: operations.setStyle, args: [after]}];\n    }\n\n    return commands;\n}\n\nexport default diffStyles;\nexport {operations};\n","// @flow\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ValidationError {\n    message: string;\n    identifier: ?string;\n    line: ?number;\n\n    constructor(key: ?string, value: ?{ __line__: number }, message: string, identifier: ?string) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier) this.identifier = identifier;\n\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n","// @flow\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ParsingError {\n    message: string;\n    error: Error;\n    line: number;\n\n    constructor(error: Error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n","\nimport ValidationError from '../error/validation_error';\n\nexport default function validateConstants(options) {\n    const key = options.key;\n    const constants = options.value;\n\n    if (constants) {\n        return [new ValidationError(key, constants, 'constants have been deprecated as of v8')];\n    } else {\n        return [];\n    }\n}\n","// @flow\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value: mixed) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value: mixed): mixed {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue: { [key: string]: mixed } = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n","\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport validateSpec from './validate';\n\nexport default function validateObject(options) {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    let errors = [];\n\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        } else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        } else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        } else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        } else {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey\n        }, object));\n    }\n\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n\n    return errors;\n}\n","\nimport getType from '../util/get_type';\nimport validate from './validate';\nimport ValidationError from '../error/validation_error';\n\nexport default function validateArray(options) {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validate;\n\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n\n    let arrayElementSpec = {\n        \"type\": arraySpec.value,\n        \"values\": arraySpec.values\n    };\n\n    if (styleSpec.$version < 7) {\n        arrayElementSpec.function = arraySpec.function;\n    }\n\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n","\nimport getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\nexport default function validateNumber(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n\n    // eslint-disable-next-line no-self-compare\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n\n    if ('minimum' in valueSpec && value < valueSpec.minimum) {\n        return [new ValidationError(key, value, `${value} is less than the minimum value ${valueSpec.minimum}`)];\n    }\n\n    if ('maximum' in valueSpec && value > valueSpec.maximum) {\n        return [new ValidationError(key, value, `${value} is greater than the maximum value ${valueSpec.maximum}`)];\n    }\n\n    return [];\n}\n","\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport validate from './validate';\nimport validateObject from './validate_object';\nimport validateArray from './validate_array';\nimport validateNumber from './validate_number';\nimport {isExpression} from '../expression';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport {\n    supportsPropertyExpression,\n    supportsZoomExpression,\n    supportsInterpolation\n} from '../util/properties';\n\nexport default function validateFunction(options) {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction =\n        getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        } else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n\n    return errors;\n\n    function validateFunctionStops(options) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n\n        let errors = [];\n        const value = options.value;\n\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n\n        return errors;\n    }\n\n    function validateFunctionStop(options) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n            if (previousStopDomainZoom && previousStopDomainZoom > unbundle(value[0].zoom)) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (unbundle(value[0].zoom) !== previousStopDomainZoom) {\n                previousStopDomainZoom = unbundle(value[0].zoom);\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {zoom: {}},\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: {zoom: validateNumber, value: validateStopDomainValue}\n            }));\n        } else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n\n        return errors.concat(validate({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n\n    function validateStopDomainValue(options, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n\n        const reportValue = options.value !== null ? options.value : stop;\n\n        if (!stopKeyType) {\n            stopKeyType = type;\n        } else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n\n        if (type !== 'number' && type !== 'string' && type !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n\n        if (functionType === 'categorical' && type === 'number' && (!isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${value}`)];\n        }\n\n        if (functionType !== 'categorical' && type === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        } else {\n            previousStopDomainValue = value;\n        }\n\n        if (functionType === 'categorical' && value in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        } else {\n            stopDomainValues[value] = true;\n        }\n\n        return [];\n    }\n\n    function validateFunctionDefault(options) {\n        return validate({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n","// @flow\n\nimport ValidationError from '../error/validation_error';\n\nimport {createExpression, createPropertyExpression} from '../expression';\nimport {deepUnbundle} from '../util/unbundle_jsonlint';\nimport {isStateConstant, isGlobalPropertyConstant, isFeatureConstant} from '../expression/is_constant';\n\nexport default function validateExpression(options: any): Array<ValidationError> {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n\n    const expressionObj = (expression.value: any).expression || (expression.value: any)._styleExpression.expression;\n\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        expressionObj.possibleOutputs().indexOf(undefined) !== -1) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n\n    if (options.expressionContext === 'filter' && !isStateConstant(expressionObj)) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with filters.')];\n    }\n\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n\n    return [];\n}\n","\nimport getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\nexport default function validateBoolean(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n\n    return [];\n}\n","\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport {parseCSSColor} from 'csscolorparser';\n\nexport default function validateColor(options) {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n\n    if (parseCSSColor(value) === null) {\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n\n    return [];\n}\n","\nimport ValidationError from '../error/validation_error';\nimport {unbundle} from '../util/unbundle_jsonlint';\n\nexport default function validateEnum(options) {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    } else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n","\nimport ValidationError from '../error/validation_error';\nimport validateExpression from './validate_expression';\nimport validateEnum from './validate_enum';\nimport getType from '../util/get_type';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport extend from '../util/extend';\nimport {isExpressionFilter} from '../feature_filter';\n\nexport default function validateFilter(options) {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        return validateExpression(extend({}, options, {\n            expressionContext: 'filter',\n            valueSpec: {value: 'boolean'}\n        }));\n    } else {\n        return validateNonExpressionFilter(options);\n    }\n}\n\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n\n    const styleSpec = options.styleSpec;\n    let type;\n\n    let errors = [];\n\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n\n    switch (unbundle(value[0])) {\n    case '<':\n    case '<=':\n    case '>':\n    case '>=':\n        if (value.length >= 2 && unbundle(value[1]) === '$type') {\n            errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n        }\n        /* falls through */\n    case '==':\n    case '!=':\n        if (value.length !== 3) {\n            errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n        }\n        /* falls through */\n    case 'in':\n    case '!in':\n        if (value.length >= 2) {\n            type = getType(value[1]);\n            if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n        }\n        for (let i = 2; i < value.length; i++) {\n            type = getType(value[i]);\n            if (unbundle(value[1]) === '$type') {\n                errors = errors.concat(validateEnum({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    valueSpec: styleSpec.geometry_type,\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            } else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n            }\n        }\n        break;\n\n    case 'any':\n    case 'all':\n    case 'none':\n        for (let i = 1; i < value.length; i++) {\n            errors = errors.concat(validateNonExpressionFilter({\n                key: `${key}[${i}]`,\n                value: value[i],\n                style: options.style,\n                styleSpec: options.styleSpec\n            }));\n        }\n        break;\n\n    case 'has':\n    case '!has':\n        type = getType(value[1]);\n        if (value.length !== 2) {\n            errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n        } else if (type !== 'string') {\n            errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n        }\n        break;\n\n    }\n\n    return errors;\n}\n","\nimport validate from './validate';\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport {isFunction} from '../function';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport {supportsPropertyExpression} from '../util/properties';\n\nexport default function validateProperty(options, propertyType) {\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n\n    if (!layerSpec) return [];\n\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validate({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(\n            key, value,\n            `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n\n    const errors = [];\n\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n\n    return errors.concat(validate({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n","\nimport validateProperty from './validate_property';\n\nexport default function validatePaintProperty(options) {\n    return validateProperty(options, 'paint');\n}\n","\nimport validateProperty from './validate_property';\n\nexport default function validateLayoutProperty(options) {\n    return validateProperty(options, 'layout');\n}\n","\nimport ValidationError from '../error/validation_error';\nimport {unbundle} from '../util/unbundle_jsonlint';\nimport validateObject from './validate_object';\nimport validateFilter from './validate_filter';\nimport validatePaintProperty from './validate_paint_property';\nimport validateLayoutProperty from './validate_layout_property';\nimport validateSpec from './validate';\nimport extend from '../util/extend';\n\nexport default function validateLayer(options) {\n    let errors = [];\n\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n\n        let parent;\n\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref) parent = layer;\n        });\n\n        if (!parent) {\n            errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        } else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        } else {\n            type = unbundle(parent.type);\n        }\n    } else if (type !== 'background') {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        } else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            } else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            } else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            } else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            } else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            } else if (type === 'line' && layer.paint && layer.paint['line-gradient'] &&\n                       (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter: validateFilter,\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n\n    return errors;\n}\n","\nimport ValidationError from '../error/validation_error';\nimport {unbundle} from '../util/unbundle_jsonlint';\nimport validateObject from './validate_object';\nimport validateEnum from './validate_enum';\nimport validateExpression from './validate_expression';\n\nexport default function validateSource(options) {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n\n    const type = unbundle(value.type);\n    let errors;\n\n    switch (type) {\n    case 'vector':\n    case 'raster':\n    case 'raster-dem':\n        errors = validateObject({\n            key,\n            value,\n            valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n            style: options.style,\n            styleSpec\n        });\n        return errors;\n\n    case 'geojson':\n        errors = validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_geojson,\n            style,\n            styleSpec\n        });\n        if (value.cluster) {\n            for (const prop in value.clusterProperties) {\n                const [operator, mapExpr] = value.clusterProperties[prop];\n                const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.map`,\n                    value: mapExpr,\n                    expressionContext: 'cluster-map'\n                }));\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.reduce`,\n                    value: reduceExpr,\n                    expressionContext: 'cluster-reduce'\n                }));\n            }\n        }\n        return errors;\n\n    case 'video':\n        return validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_video,\n            style,\n            styleSpec\n        });\n\n    case 'image':\n        return validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_image,\n            style,\n            styleSpec\n        });\n\n    case 'canvas':\n        return [new ValidationError(key, null, `Please use runtime APIs to add canvas sources, rather than including them in stylesheets.`, 'source.canvas')];\n\n    default:\n        return validateEnum({\n            key: `${key}.type`,\n            value: value.type,\n            valueSpec: {values: ['vector', 'raster', 'raster-dem', 'geojson', 'video', 'image']},\n            style,\n            styleSpec\n        });\n    }\n}\n","\nimport ValidationError from '../error/validation_error';\nimport getType from '../util/get_type';\nimport validate from './validate';\n\nexport default function validateLight(options) {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n\n    let errors = [];\n\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (lightSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n","\nimport getType from '../util/get_type';\nimport ValidationError from '../error/validation_error';\n\nexport default function validateString(options) {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n\n    return [];\n}\n","// @flow\nimport validateExpression from './validate_expression';\nimport validateString from './validate_string';\n\nexport default function validateFormatted(options: any) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","// @flow\nimport validateExpression from './validate_expression';\nimport validateString from './validate_string';\n\nexport default function validateImage(options: any) {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n","\nimport extend from '../util/extend';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint';\nimport {isExpression} from '../expression';\nimport {isFunction} from '../function';\n\nimport validateFunction from './validate_function';\nimport validateExpression from './validate_expression';\nimport validateObject from './validate_object';\nimport validateArray from './validate_array';\nimport validateBoolean from './validate_boolean';\nimport validateNumber from './validate_number';\nimport validateColor from './validate_color';\nimport validateConstants from './validate_constants';\nimport validateEnum from './validate_enum';\nimport validateFilter from './validate_filter';\nimport validateLayer from './validate_layer';\nimport validateSource from './validate_source';\nimport validateLight from './validate_light';\nimport validateString from './validate_string';\nimport validateFormatted from './validate_formatted';\nimport validateImage from './validate_image';\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'constants': validateConstants,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage\n};\n\n// Main recursive validation function. Tracks:\n//\n// - key: string representing location of validation in style tree. Used only\n//   for more informative error reporting.\n// - value: current value from style being evaluated. May be anything from a\n//   high level object that needs to be descended into deeper or a simple\n//   scalar value.\n// - valueSpec: current spec being evaluated. Tracks value.\n// - styleSpec: current full spec being evaluated.\n\nexport default function validate(options) {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n\n    if (valueSpec.expression && isFunction(unbundle(value))) {\n        return validateFunction(options);\n\n    } else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n\n    } else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n\n    } else {\n        const valid = validateObject(extend({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n","\nimport ValidationError from '../error/validation_error';\nimport validateString from './validate_string';\n\nexport default function(options) {\n    const value = options.value;\n    const key = options.key;\n\n    const errors = validateString(options);\n    if (errors.length) return errors;\n\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n\n    return errors;\n}\n","\nimport validateConstants from './validate/validate_constants';\nimport validate from './validate/validate';\nimport latestStyleSpec from './reference/latest';\nimport validateGlyphsURL from './validate/validate_glyphs_url';\n\nimport validateSource from './validate/validate_source';\nimport validateLight from './validate/validate_light';\nimport validateLayer from './validate/validate_layer';\nimport validateFilter from './validate/validate_filter';\nimport validatePaintProperty from './validate/validate_paint_property';\nimport validateLayoutProperty from './validate/validate_layout_property';\n\n/**\n * Validate a Mapbox GL style against the style specification. This entrypoint,\n * `mapbox-gl-style-spec/lib/validate_style.min`, is designed to produce as\n * small a browserify bundle as possible by omitting unnecessary functionality\n * and legacy style specifications.\n *\n * @private\n * @param {Object} style The style to be validated.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the latest style spec is used.\n * @returns {Array<ValidationError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec/lib/validate_style.min');\n *   var errors = validate(style);\n */\nfunction validateStyleMin(style, styleSpec = latestStyleSpec) {\n\n    let errors = [];\n\n    errors = errors.concat(validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        objectElementValidators: {\n            glyphs: validateGlyphsURL,\n            '*'() {\n                return [];\n            }\n        }\n    }));\n\n    if (style.constants) {\n        errors = errors.concat(validateConstants({\n            key: 'constants',\n            value: style.constants,\n            style,\n            styleSpec\n        }));\n    }\n\n    return sortErrors(errors);\n}\n\nvalidateStyleMin.source = wrapCleanErrors(validateSource);\nvalidateStyleMin.light = wrapCleanErrors(validateLight);\nvalidateStyleMin.layer = wrapCleanErrors(validateLayer);\nvalidateStyleMin.filter = wrapCleanErrors(validateFilter);\nvalidateStyleMin.paintProperty = wrapCleanErrors(validatePaintProperty);\nvalidateStyleMin.layoutProperty = wrapCleanErrors(validateLayoutProperty);\n\nfunction sortErrors(errors) {\n    return [].concat(errors).sort((a, b) => {\n        return a.line - b.line;\n    });\n}\n\nfunction wrapCleanErrors(inner) {\n    return function(...args) {\n        return sortErrors(inner.apply(this, args));\n    };\n}\n\nexport default validateStyleMin;\n","/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,12],$V1=[1,13],$V2=[1,9],$V3=[1,10],$V4=[1,11],$V5=[1,14],$V6=[1,15],$V7=[14,18,22,24],$V8=[18,22],$V9=[22,24];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"JSONString\":3,\"STRING\":4,\"JSONNumber\":5,\"NUMBER\":6,\"JSONNullLiteral\":7,\"NULL\":8,\"JSONBooleanLiteral\":9,\"TRUE\":10,\"FALSE\":11,\"JSONText\":12,\"JSONValue\":13,\"EOF\":14,\"JSONObject\":15,\"JSONArray\":16,\"{\":17,\"}\":18,\"JSONMemberList\":19,\"JSONMember\":20,\":\":21,\",\":22,\"[\":23,\"]\":24,\"JSONElementList\":25,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"STRING\",6:\"NUMBER\",8:\"NULL\",10:\"TRUE\",11:\"FALSE\",14:\"EOF\",17:\"{\",18:\"}\",21:\":\",22:\",\",23:\"[\",24:\"]\"},\nproductions_: [0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n // replace escaped characters with actual character\n          this.$ = new String(yytext.replace(/\\\\(\\\\|\")/g, \"$\"+\"1\")\n                     .replace(/\\\\n/g,'\\n')\n                     .replace(/\\\\r/g,'\\r')\n                     .replace(/\\\\t/g,'\\t')\n                     .replace(/\\\\v/g,'\\v')\n                     .replace(/\\\\f/g,'\\f')\n                     .replace(/\\\\b/g,'\\b'));\n          this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 2:\n\n            this.$ = new Number(yytext);\n            this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 3:\n\n            this.$ = null;\n        \nbreak;\ncase 4:\n\n            this.$ = new Boolean(true);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 5:\n\n            this.$ = new Boolean(false);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 6:\nreturn this.$ = $$[$0-1];\nbreak;\ncase 13:\nthis.$ = {}; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 14: case 19:\nthis.$ = $$[$0-1]; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 15:\nthis.$ = [$$[$0-2], $$[$0]];\nbreak;\ncase 16:\nthis.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 17:\nthis.$ = $$[$0-2]; $$[$0-2][$$[$0][0]] = $$[$0][1];\nbreak;\ncase 18:\nthis.$ = []; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 20:\nthis.$ = [$$[$0]];\nbreak;\ncase 21:\nthis.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,12:1,13:2,15:7,16:8,17:$V5,23:$V6},{1:[3]},{14:[1,16]},o($V7,[2,7]),o($V7,[2,8]),o($V7,[2,9]),o($V7,[2,10]),o($V7,[2,11]),o($V7,[2,12]),o($V7,[2,3]),o($V7,[2,4]),o($V7,[2,5]),o([14,18,21,22,24],[2,1]),o($V7,[2,2]),{3:20,4:$V0,18:[1,17],19:18,20:19},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:23,15:7,16:8,17:$V5,23:$V6,24:[1,21],25:22},{1:[2,6]},o($V7,[2,13]),{18:[1,24],22:[1,25]},o($V8,[2,16]),{21:[1,26]},o($V7,[2,18]),{22:[1,28],24:[1,27]},o($V9,[2,20]),o($V7,[2,14]),{3:20,4:$V0,20:29},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:30,15:7,16:8,17:$V5,23:$V6},o($V7,[2,19]),{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:31,15:7,16:8,17:$V5,23:$V6},o($V8,[2,17]),o($V8,[2,15]),o($V9,[2,21])],\ndefaultActions: {16:[2,6]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        function lex() {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 6\nbreak;\ncase 2:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 4\nbreak;\ncase 3:return 17\nbreak;\ncase 4:return 18\nbreak;\ncase 5:return 23\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 22\nbreak;\ncase 8:return 21\nbreak;\ncase 9:return 10\nbreak;\ncase 10:return 11\nbreak;\ncase 11:return 8\nbreak;\ncase 12:return 14\nbreak;\ncase 13:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\\.[0-9]+)?([eE][-+]?[0-9]+)?\\b)/,/^(?:\"(?:\\\\[\\\\\"bfnrt/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\n}\n","import ParsingError from './error/parsing_error';\nimport jsonlint from '@mapbox/jsonlint-lines-primitives';\n\nexport default function readStyle(style) {\n    if (style instanceof String || typeof style === 'string' || style instanceof Buffer) {\n        try {\n            return jsonlint.parse(style.toString());\n        } catch (e) {\n            throw new ParsingError(e);\n        }\n    }\n\n    return style;\n}\n","\nimport validateStyleMin from './validate_style.min';\nimport {v8} from './style-spec';\nimport readStyle from './read_style';\n\n/**\n * Validate a Mapbox GL style against the style specification.\n *\n * @private\n * @alias validate\n * @param {Object|String|Buffer} style The style to be validated. If a `String`\n *     or `Buffer` is provided, the returned errors will contain line numbers.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the spec version is inferred from the stylesheet.\n * @returns {Array<ValidationError|ParsingError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec').validate;\n *   var style = fs.readFileSync('./style.json', 'utf8');\n *   var errors = validate(style);\n */\n\nexport default function validateStyle(style, styleSpec = v8) {\n    let s = style;\n\n    try {\n        s = readStyle(s);\n    } catch (e) {\n        return [e];\n    }\n\n    return validateStyleMin(s, styleSpec);\n}\n\nexport const source = validateStyleMin.source;\nexport const light = validateStyleMin.light;\nexport const layer = validateStyleMin.layer;\nexport const filter = validateStyleMin.filter;\nexport const paintProperty = validateStyleMin.paintProperty;\nexport const layoutProperty = validateStyleMin.layoutProperty;\n","// @flow\n\nimport validateStyle from './validate_style.min';\nimport {v8} from './style-spec';\nimport readStyle from './read_style';\nimport ValidationError from './error/validation_error';\nimport getType from './util/get_type';\n\nconst SUPPORTED_SPEC_VERSION = 8;\nconst MAX_SOURCES_IN_STYLE = 15;\n\nfunction isValid(value: ?string, regex: RegExp): boolean {\n    if (!value || getType(value) !== 'string') return true;\n    return !!value.match(regex);\n}\n\nfunction getSourceCount(source: Object): number {\n    if (source.url) {\n        return source.url.split(',').length;\n    } else {\n        return 0;\n    }\n}\n\nfunction getAllowedKeyErrors(obj: Object, keys: Array<*>, path: ?string): Array<?ValidationError> {\n    const allowed = new Set(keys);\n    const errors = [];\n    Object.keys(obj).forEach(k => {\n        if (!allowed.has(k)) {\n            const prop = path ? `${path}.${k}` : null;\n            errors.push(new ValidationError(prop, obj[k], `Unsupported property \"${k}\"`));\n        }\n    });\n    return errors;\n}\n\nfunction getSourceErrors(source: Object, i: number): Array<?ValidationError> {\n    const errors = [];\n\n    /*\n     * Inlined sources are not supported by the Mapbox Styles API, so only\n     * \"type\", \"url\", and \"tileSize\" properties are valid\n     */\n    const sourceKeys = ['type', 'url', 'tileSize'];\n    errors.push(...getAllowedKeyErrors(source, sourceKeys, 'source'));\n\n    /*\n     * \"source\" is required. Valid examples:\n     * mapbox://mapbox.abcd1234\n     * mapbox://penny.abcd1234\n     * mapbox://mapbox.abcd1234,penny.abcd1234\n     */\n    const sourceUrlPattern = /^mapbox:\\/\\/([^/]*)$/;\n    if (!isValid(source.url, sourceUrlPattern)) {\n        errors.push(new ValidationError(`sources[${i}]`, source.url, 'Source url must be a valid Mapbox tileset url'));\n    }\n\n    return errors;\n}\n\nfunction getSourcesErrors(sources: Object): Array<?ValidationError> {\n    const errors = [];\n    let count = 0;\n\n    Object.keys(sources).forEach((s: string, i: number) => {\n        const sourceErrors = getSourceErrors(sources[s], i);\n\n        // If source has errors, skip counting\n        if (!sourceErrors.length) {\n            count = count + getSourceCount(sources[s]);\n        }\n\n        errors.push(...sourceErrors);\n    });\n\n    if (count > MAX_SOURCES_IN_STYLE) {\n        errors.push(new ValidationError('sources', null, `Styles must contain ${MAX_SOURCES_IN_STYLE} or fewer sources`));\n    }\n\n    return errors;\n}\n\nfunction getRootErrors(style: Object, specKeys: Array<any>): Array<?ValidationError> {\n    const errors = [];\n\n    /*\n     * The following keys are optional but fully managed by the Mapbox Styles\n     * API. Values on stylesheet on POST or PATCH will be ignored: \"owner\",\n     * \"id\", \"cacheControl\", \"draft\", \"created\", \"modified\"\n     *\n     * The following keys are optional. The Mapbox Styles API respects value on\n     * stylesheet on PATCH, but ignores the value on POST: \"visibility\"\n     */\n    const optionalRootProperties = [\n        'owner',\n        'id',\n        'cacheControl',\n        'draft',\n        'created',\n        'modified',\n        'visibility'\n    ];\n\n    const allowedKeyErrors = getAllowedKeyErrors(style, [...specKeys, ...optionalRootProperties]);\n    errors.push(...allowedKeyErrors);\n\n    if (style.version > SUPPORTED_SPEC_VERSION || style.version < SUPPORTED_SPEC_VERSION) {\n        errors.push(new ValidationError('version', style.version, `Style version must be ${SUPPORTED_SPEC_VERSION}`));\n    }\n\n    /*\n     * \"glyphs\" is optional. If present, valid examples:\n     * mapbox://fonts/penny/{fontstack}/{range}.pbf\n     * mapbox://fonts/mapbox/{fontstack}/{range}.pbf\n     */\n    const glyphUrlPattern = /^mapbox:\\/\\/fonts\\/([^/]*)\\/{fontstack}\\/{range}.pbf$/;\n    if (!isValid(style.glyphs, glyphUrlPattern)) {\n        errors.push(new ValidationError('glyphs', style.glyphs, 'Styles must reference glyphs hosted by Mapbox'));\n    }\n\n    /*\n     * \"sprite\" is optional. If present, valid examples:\n     * mapbox://sprites/penny/abcd1234\n     * mapbox://sprites/mapbox/abcd1234/draft\n     * mapbox://sprites/cyrus/abcd1234/abcd1234\n     */\n    const spriteUrlPattern = /^mapbox:\\/\\/sprites\\/([^/]*)\\/([^/]*)\\/?([^/]*)?$/;\n    if (!isValid(style.sprite, spriteUrlPattern)) {\n        errors.push(new ValidationError('sprite', style.sprite, 'Styles must reference sprites hosted by Mapbox'));\n    }\n\n    /*\n     * \"visibility\" is optional. If present, valid examples:\n     * \"private\"\n     * \"public\"\n     */\n    const visibilityPattern = /^(public|private)$/;\n    if (!isValid(style.visibility, visibilityPattern)) {\n        errors.push(new ValidationError('visibility', style.visibility, 'Style visibility must be public or private'));\n    }\n\n    return errors;\n}\n\n/**\n * Validate a Mapbox GL style against the style specification and check for\n * compatibility with the Mapbox Styles API.\n *\n * @param {Object} style The style to be validated.\n * @returns {Array<ValidationError>}\n * @example\n *   var validateMapboxApiSupported = require('mapbox-gl-style-spec/lib/validate_style_mapbox_api_supported.js');\n *   var errors = validateMapboxApiSupported(style);\n */\nexport default function validateMapboxApiSupported(style: Object): Array<?ValidationError> {\n    let s = style;\n    try {\n        s = readStyle(s);\n    } catch (e) {\n        return [e];\n    }\n\n    let errors = validateStyle(s, v8)\n        .concat(getRootErrors(s, Object.keys(v8.$root)));\n\n    if (s.sources) {\n        errors = errors.concat(getSourcesErrors(s.sources));\n    }\n\n    return errors;\n}\n","// @flow\n\ntype ExpressionType = 'data-driven' | 'cross-faded' | 'cross-faded-data-driven' | 'color-ramp' | 'data-constant' | 'constant';\ntype ExpressionParameters = Array<'zoom' | 'feature' | 'feature-state' | 'heatmap-density' | 'line-progress'>;\n\ntype ExpressionSpecification = {\n    interpolated: boolean,\n    parameters: ExpressionParameters\n}\n\nexport type StylePropertySpecification = {\n    type: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: number\n} | {\n    type: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string,\n    tokens?: boolean\n} | {\n    type: 'boolean',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: boolean\n} | {\n    type: 'enum',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    values: {[string]: {}},\n    transition: boolean,\n    default?: string\n} | {\n    type: 'color',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string,\n    overridable: boolean\n} | {\n    type: 'array',\n    value: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition: boolean,\n    default?: Array<number>\n} | {\n    type: 'array',\n    value: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition: boolean,\n    default?: Array<string>\n};\n\nimport v8 from './reference/v8.json';\nimport latest from './reference/latest';\nimport format from './format';\nimport migrate from './migrate';\nimport composite from './composite';\nimport diff from './diff';\nimport ValidationError from './error/validation_error';\nimport ParsingError from './error/parsing_error';\nimport {StyleExpression, isExpression, createExpression, createPropertyExpression, normalizePropertyExpression, ZoomConstantExpression, ZoomDependentExpression, StylePropertyFunction} from './expression';\nimport featureFilter from './feature_filter';\nimport convertFilter from './feature_filter/convert';\nimport Color from './util/color';\nimport {createFunction, isFunction} from './function';\nimport convertFunction from './function/convert';\nimport {eachSource, eachLayer, eachProperty} from './visit';\n\nimport validate from './validate_style';\nimport validateMapboxApiSupported from './validate_mapbox_api_supported';\n\nconst expression = {\n    StyleExpression,\n    isExpression,\n    createExpression,\n    createPropertyExpression,\n    normalizePropertyExpression,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    StylePropertyFunction\n};\n\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction\n};\n\nconst visit = {eachSource, eachLayer, eachProperty};\n\nexport {\n    v8,\n    latest,\n    format,\n    migrate,\n    composite,\n    diff,\n    ValidationError,\n    ParsingError,\n    expression,\n    featureFilter,\n    convertFilter,\n    Color,\n    styleFunction as function,\n    validate,\n    validateMapboxApiSupported,\n    visit\n};\n\nvalidate.parsed = validate;\nvalidate.latest = validate;\n"],"names":["sortKeysBy","obj","reference","const","result","key","undefined","format","style","space","$root","layers","map","layer","stringifyPretty","indent","global","this","require$$0","require$$1","getPropertyReference","propertyName","let","i","Reference","layout","length","paint","eachSource","callback","k","sources","eachLayer","eachProperty","options","inner","propertyType","properties","Object","keys","forEach","path","id","value","set","x","eachLayout","indexOf","eachPaint","resolveConstant","constants","isFunction","Array","isArray","stops","renameProperty","from","to","version","source","type","url","coordinates","coord","reverse","property","stop","migrateFontstackURL","input","inputParsed","URL","parse","inputPathnameParts","pathname","split","protocol","hostname","glyphs","migrateFontStack","font","splitAndTrim","string","s","trim","Error","firstSymbolLayer","symbolLayers","splice","concat","output","inputs","ParsingError","message","super","Scope","parent","bindings","ref","name","expression","get","has","NullType","kind","NumberType","StringType","BooleanType","ColorType","ObjectType","ValueType","ErrorType","CollatorType","FormattedType","ResolvedImageType","array","itemType","N","toString","valueMemberTypes","checkSubtype","expected","t","memberType","kCSSColorTable","clamp_css_byte","Math","round","clamp_css_float","f","parse_css_int","str","parseFloat","parseInt","parse_css_float","css_hue_to_rgb","m1","m2","h","parseCSSColor","css_str","replace","toLowerCase","slice","iv","substr","op","ep","fname","params","alpha","pop","l","exports","e","Color","r","g","b","a","rgba","toArray","black","white","transparent","red","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","compare","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","text","image","scale","fontStack","textColor","Formatted","sections","fromString","unformatted","isEmpty","some","section","factory","join","serialize","serialized","push","ResolvedImage","available","validateRGBA","isValue","mixed","item","typeOf","String","JSON","stringify","Literal","args","context","error","expectedType","evaluate","eachChild","possibleOutputs","RuntimeError","toJSON","types","number","boolean","object","Assertion","floor","parsed","ctx","fn","arg","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluateSection","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","Coercion","Boolean","c","parseColor","num","Number","isNaN","valueToString","child","geometryTypes","EvaluationContext","globals","feature","featureState","formattedSection","_parseColorCache","geometryType","cached","CompoundExpression","_evaluate","definition","definitions","availableOverloads","overloads","filter","signature","signatureContext","ParsingContext","registry","scope","parsedArgs","argParseFailed","errors","ref$1","signatures","stringifySignature","actualTypes","register","CollatorExpression","isFeatureConstant","test","isStateConstant","isGlobalPropertyConstant","Var","boundExpression","part","expr","index","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","lastIndex","lowerIndex","upperIndex","currentIndex","currentValue","nextValue","Step","labels","outputs","label","outputType","Infinity","labelKey","valueKey","stopCount","color","d","Xn","Yn","Zn","t0","t1","t2","t3","deg2rad","PI","rad2deg","xyz2lab","pow","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","y","z","labToRgb","labColor","interpolateLab","interpolateNumber","rgbToHcl","atan2","sqrt","hclToRgb","hclColor","cos","sin","interpolateHue","interpolateHcl","lab","forward","interpolate","hcl","Interpolate","operator","interpolation","interpolationFactor","lower","upper","exponentialInterpolation","base","controlPoints","ub","UnitBezier","solve","rest","outputLower","outputUpper","lowerValue","upperValue","difference","progress","Coalesce","needsAnnotation","argCount","requestedImageName","Let","binding","At","isComparableType","isComparableRuntimeValue","needle","isSearchableRuntimeValue","haystack","In","Match","inputType","cases","otherwise","labelContext","abs","MAX_SAFE_INTEGER","out","sortedLabels","sort","groupedByOutput","outputLookup","outputIndex","coerceLabel","Case","branches","eq","neq","lt","gt","lteq","gteq","eqCollate","neqCollate","ltCollate","gtCollate","lteqCollate","gteqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","hasUntypedArgument","Comparison","rt","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","v","binarySearch","j","m","varargs","typeToString","zoom","heatmapDensity","lineProgress","accumulated","LN2","E","log","n","LN10","tan","asin","acos","atan","min","max","ceil","isSupportedScript","toUpperCase","success","supportsPropertyExpression","spec","supportsZoomExpression","parameters","supportsInterpolation","interpolated","getType","val","identityFunction","createFunction","propertySpec","isColor","zoomAndFeatureDependent","featureDependent","zoomDependent","extend","default","colorSpace","colorSpaces","innerFun","hashedStops","categoricalKeyType","evaluateExponentialFunction","evaluateIntervalFunction","evaluateCategoricalFunction","create","evaluateIdentityFunction","featureFunctions","zoomStops","featureFunctionStops","interpolationType","bind","_","coalesce","keyType","evaluated","interp","colorspace","evaluatedLower","apply","evaluatedUpper","values","StyleExpression","_warningHistory","_evaluator","_defaultValue","getDefaultValue","_enumValues","evaluateWithoutErrorHandling","console","warn","isExpression","createExpression","parser","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","createPropertyExpression","isZoomConstant","zoomCurve","findZoomCurve","StylePropertyFunction","specification","_parameters","_specification","deserialize","normalizePropertyExpression","err","constant","childResult","enum","formatted","resolvedImage","convertLiteral","convertFunction","convertIdentityFunction","tokens","convertTokenString","convertZoomAndPropertyFunction","convertZoomFunction","convertPropertyFunction","getInterpolateOperator","featureFunctionParameters","functionType","getFunctionType","appendStopPair","fixupDegenerateStepCurve","isStep","curve","re","pos","match","exec","literal","isExpressionFilter","filterSpec","createFilter","convertFilter","compiled","globalProperties","converted","convertComparisonOp","convertNegation","convertDisjunctionOp","convertInOp","convertHasOp","filters","_convertFilter","expectedTypes","children","typechecks","runtimeTypeChecks","conditions","negate","uniformTypes","uniqueValues","migrated","migrateToV8","migrateToExpressions","styleIDs","sourceIDs","compositedSourceLayers","compositeID","deepEqual","operations","setStyle","addLayer","removeLayer","setPaintProperty","setLayoutProperty","setFilter","addSource","removeSource","setGeoJSONSourceData","setLayerZoomRange","setLayerProperty","setCenter","setZoom","setBearing","setPitch","setSprite","setGlyphs","setTransition","setLight","sourceId","after","commands","command","sourcesRemoved","updateSource","canUpdateGeoJSON","before","prop","hasOwnProperty","isEqual","diffSources","data","diffLayerPropertyChanges","layerId","klass","pluckId","indexById","group","diffLayers","beforeOrder","afterOrder","beforeIndex","reduce","afterIndex","tracker","clean","beforeLayer","afterLayer","insertBeforeLayerId","lastIndexOf","minzoom","maxzoom","diffStyles","center","bearing","pitch","sprite","transition","light","removeOrAddSourceCommands","beforeLayers","ValidationError","identifier","__line__","line","validateConstants","unbundle","valueOf","deepUnbundle","unbundledValue","validateObject","elementSpecs","valueSpec","elementValidators","objectElementValidators","styleSpec","objectKey","elementSpecKey","elementSpec","validateElement","validateSpec","required","validateArray","arraySpec","validateArrayElement","arrayElementValidator","validate","arrayElementSpec","$version","function","arrayIndex","validateNumber","minimum","maximum","validateFunction","functionValueSpec","stopKeyType","stopDomainValues","previousStopDomainValue","previousStopDomainZoom","isZoomFunction","isPropertyFunction","isZoomAndPropertyFunction","validateFunctionStops","validateFunctionDefault","validateFunctionStop","validateStopDomainValue","reportValue","isFinite","validateExpression","expressionContext","expressionObj","propertyKey","validateBoolean","validateColor","validateEnum","validateFilter","validateNonExpressionFilter","filter_operator","geometry_type","validateProperty","layerSpec","layerType","transitionMatch","tokenMatch","validatePaintProperty","validateLayoutProperty","validateLayer","otherLayer","p","sourceType","lineMetrics","validateSource","source_geojson","cluster","clusterProperties","reduceExpr","mapExpr","source_video","source_image","validateLight","lightSpec","rootType","validateString","validateFormatted","validateImage","VALIDATORS","valid","validateStyleMin","latestStyleSpec","validateGlyphsURL","sortErrors","wrapCleanErrors","paintProperty","layoutProperty","require","readStyle","Buffer","jsonlint","validateStyle","v8","SUPPORTED_SPEC_VERSION","MAX_SOURCES_IN_STYLE","isValid","regex","getSourceCount","getAllowedKeyErrors","allowed","Set","getSourceErrors","sourceKeys","sourceUrlPattern","getSourcesErrors","count","sourceErrors","getRootErrors","specKeys","optionalRootProperties","allowedKeyErrors","glyphUrlPattern","spriteUrlPattern","visibilityPattern","visibility","validateMapboxApiSupported","styleFunction","visit","latest"],"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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,C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"}